{"ast":null,"code":"var _jsxFileName = \"/home/g404/Documents/Random-Rumblee/src/Components/ButtonCapacity.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonCapacity = ({\n  abilities,\n  player\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const handleCapacity = ability => {\n    switch (ability.type) {\n      case \"damage\":\n        if (player.pv > 0) {\n          dispatch({\n            type: \"HIT_MONSTER\",\n            payload: {\n              monsterDamage: ability.damage\n            }\n          });\n        }\n        dispatch({\n          type: \"HIT_PLAYER\",\n          payload: {\n            damage: ability.damage,\n            playerId: player.id\n          }\n        });\n        break;\n      case \"heal\":\n        dispatch({\n          type: \"HEAL_PLAYER\",\n          payload: {\n            healPlayer: {\n              heal: ability.heal,\n              id: player.id,\n              manaCost: ability.manaCost,\n              maxHealth: 100\n            }\n          }\n        });\n        break;\n      case \"fireBall\":\n        const updatedManaCostFireBall = Math.min(ability.manaCost, player.mana);\n        if (player.mana >= updatedManaCostFireBall) {\n          dispatch({\n            type: \"FIRE_BALL\",\n            payload: {\n              fireBall: {\n                damage: ability.damage,\n                id: player.id,\n                manaCost: updatedManaCostFireBall\n              }\n            }\n          });\n          dispatch({\n            type: \"MANA_PLAYER\",\n            payload: {\n              manaPlayer: {\n                mana: 30,\n                id: player.id,\n                manaCost: updatedManaCostFireBall\n              }\n            }\n          });\n        } else {\n          console.log(\"Not enough mana to cast the fireball.\");\n        }\n        break;\n      case \"mana\":\n        dispatch({\n          type: \"MANA_PLAYER\",\n          payload: {\n            manaPlayer: {\n              mana: 30,\n              id: player.id,\n              manaCost: ability.manaCost\n            }\n          }\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  const getButtonClassName = ability => {\n    switch (ability.type) {\n      case \"heal\":\n        return \"btn btn-danger m-1 btn-heal\";\n      case \"damage\":\n        return \"btn btn-success m-1 btn-attack\";\n      case \"fireBall\":\n        return \"btn btn-warning m-1 btn-fireball\";\n      case \"mana\":\n        return \"btn btn-info m-1 btn-mana\";\n      default:\n        return \"btn btn-secondary m-1\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: abilities.map((ability, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: () => handleCapacity(ability),\n      className: getButtonClassName(ability),\n      disabled: false,\n      children: [ability.name, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: ability.type === \"heal\" ? \"fas fa-heart\" : \"fas fa-bomb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), \" \", ability.type === \"heal\" ? `+${ability.heal}` : ability.damage, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-fire-alt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this), \" - \", ability.manaCost, \" Mana\"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonCapacity, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ButtonCapacity;\nexport default ButtonCapacity;\nvar _c;\n$RefreshReg$(_c, \"ButtonCapacity\");","map":{"version":3,"names":["React","useDispatch","jsxDEV","_jsxDEV","ButtonCapacity","abilities","player","_s","dispatch","handleCapacity","ability","type","pv","payload","monsterDamage","damage","playerId","id","healPlayer","heal","manaCost","maxHealth","updatedManaCostFireBall","Math","min","mana","fireBall","manaPlayer","console","log","getButtonClassName","children","map","index","onClick","className","disabled","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/g404/Documents/Random-Rumblee/src/Components/ButtonCapacity.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst ButtonCapacity = ({ abilities, player }) => {\n  const dispatch = useDispatch();\n\n  const handleCapacity = (ability) => {\n    switch (ability.type) {\n      case \"damage\":\n        if (player.pv > 0) {\n          dispatch({\n            type: \"HIT_MONSTER\",\n            payload: { monsterDamage: ability.damage }\n          });\n        }\n        dispatch({\n          type: \"HIT_PLAYER\",\n          payload: { damage: ability.damage, playerId: player.id },\n        });\n        break;\n      case \"heal\":\n        dispatch({\n          type: \"HEAL_PLAYER\",\n          payload: {\n            healPlayer: {\n              heal: ability.heal,\n              id: player.id,\n              manaCost: ability.manaCost,\n              maxHealth: 100\n            }\n          }\n        });\n        break;\n      case \"fireBall\":\n        const updatedManaCostFireBall = Math.min(\n          ability.manaCost,\n          player.mana\n        );\n        if (player.mana >= updatedManaCostFireBall) {\n          dispatch({\n            type: \"FIRE_BALL\",\n            payload: {\n              fireBall: {\n                damage: ability.damage,\n                id: player.id,\n                manaCost: updatedManaCostFireBall\n              }\n            }\n          });\n          dispatch({\n            type: \"MANA_PLAYER\",\n            payload: {\n              manaPlayer: {\n                mana: 30,\n                id: player.id,\n                manaCost: updatedManaCostFireBall\n              }\n            }\n          });\n        } else {\n          console.log(\"Not enough mana to cast the fireball.\");\n        }\n        break;\n      case \"mana\":\n        dispatch({\n          type: \"MANA_PLAYER\",\n          payload: { manaPlayer: { mana: 30, id: player.id, manaCost: ability.manaCost } }\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getButtonClassName = (ability) => {\n    switch (ability.type) {\n      case \"heal\":\n        return \"btn btn-danger m-1 btn-heal\";\n      case \"damage\":\n        return \"btn btn-success m-1 btn-attack\";\n      case \"fireBall\":\n        return \"btn btn-warning m-1 btn-fireball\";\n      case \"mana\":\n        return \"btn btn-info m-1 btn-mana\";\n      default:\n        return \"btn btn-secondary m-1\";\n    }\n  };\n\n  return (\n    <div>\n      {abilities.map((ability, index) => (\n        <button\n          key={index}\n          type=\"button\"\n          onClick={() => handleCapacity(ability)}\n          className={getButtonClassName(ability)}\n          disabled={false}\n        >\n          {ability.name}{\" \"}\n          <i className={ability.type === \"heal\" ? \"fas fa-heart\" : \"fas fa-bomb\"}></i>{\" \"}\n          {ability.type === \"heal\" ? `+${ability.heal}` : ability.damage}{\" \"}\n          <i className=\"fas fa-fire-alt\"></i> - {ability.manaCost} Mana\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ButtonCapacity;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}