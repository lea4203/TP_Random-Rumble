{"ast":null,"code":"var _jsxFileName = \"/home/g404/Documents/Random-Rumblee/src/Components/ButtonCapacity.js\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isCurrentPlayerAlive } from \"../store/rootReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonCapacity = ({\n  player,\n  ability\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const gameState = useSelector(state => state);\n  const isCurrentPlayerAlive = gameState => {\n    const currentPlayer = gameState.players.find(player => player.id === gameState.currentTurnPlayer);\n    const hitMonster = damage => {\n      dispatch({\n        type: \"HIT_MONSTER\",\n        payload: {\n          monsterDamage: damage\n        }\n      });\n    };\n    const hitPlayer = damage => {\n      dispatch({\n        type: \"HIT_PLAYER\",\n        payload: {\n          damage,\n          playerId: player.id,\n          manaReduction: ability.manaCost\n        }\n      });\n    };\n    const healPlayer = heal => {\n      dispatch({\n        type: \"HEAL_PLAYER\",\n        payload: {\n          healPlayer: {\n            heal,\n            id: player.id,\n            manaCost: ability.manaCost,\n            maxHealth: 100\n          }\n        }\n      });\n    };\n    const castFireBall = (damage, manaCost) => {\n      dispatch({\n        type: \"FIRE_BALL\",\n        payload: {\n          fireBall: {\n            damage,\n            id: player.id,\n            manaCost\n          }\n        }\n      });\n    };\n    const manaPlayer = () => {\n      dispatch({\n        type: \"MANA_PLAYER\",\n        payload: {\n          manaPlayer: {\n            mana: 30,\n            id: player.id,\n            manaCost: ability.manaCost\n          }\n        }\n      });\n    };\n    const nextTurn = () => {\n      dispatch({\n        type: \"NEXT_TURN\"\n      });\n    };\n    const handleCapacity = () => {\n      const isAlive = isCurrentPlayerAlive(gameState);\n      if (isAlive) {\n        switch (ability.type) {\n          case \"damage\":\n            if (player.pv > 0) {\n              hitMonster(ability.damage);\n            }\n            hitPlayer(ability.damage);\n            break;\n          case \"heal\":\n            healPlayer(ability.heal);\n            break;\n          case \"fireBall\":\n            castFireBall(ability.damage, ability.manaCost);\n            break;\n          case \"mana\":\n            manaPlayer();\n            break;\n          case \"playerIsAlive\":\n            // Notez que je n'ai pas ajouté de fonction pour \"playerIsAlive\" car cela ne semble pas nécessaire ici\n            break;\n          case \"nextTurn\":\n            nextTurn();\n            break;\n          default:\n            break;\n        }\n        setIsAlive(isCurrentPlayerAlive(gameState));\n      }\n    };\n    const getButtonClassName = () => {\n      switch (ability.type) {\n        case \"heal\":\n          return \"btn btn-danger m-1 btn-heal\";\n        case \"damage\":\n          return \"btn btn-success m-1 btn-attack\";\n        case \"fireBall\":\n          return \"btn btn-warning m-1 btn-fireball\";\n        case \"mana\":\n          return \"btn btn-info m-1 btn-mana\";\n        default:\n          return \"btn btn-secondary m-1\";\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      onClick: handleCapacity,\n      className: getButtonClassName(),\n      disabled: !isAlive,\n      children: [ability.name, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: ability.type === \"heal\" ? \"fas fa-heart\" : \"fas fa-bomb\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), \" \", ability.type === \"heal\" ? `+${ability.heal}` : ability.damage, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-fire-alt\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), \" - \", ability.manaCost, \" Mana\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }, this);\n  };\n};\n_s(ButtonCapacity, \"kQ/aMI6css9ruChq/WIftVZi+hc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ButtonCapacity;\nexport default ButtonCapacity;\nvar _c;\n$RefreshReg$(_c, \"ButtonCapacity\");","map":{"version":3,"names":["useDispatch","useSelector","isCurrentPlayerAlive","jsxDEV","_jsxDEV","ButtonCapacity","player","ability","_s","dispatch","gameState","state","currentPlayer","players","find","id","currentTurnPlayer","hitMonster","damage","type","payload","monsterDamage","hitPlayer","playerId","manaReduction","manaCost","healPlayer","heal","maxHealth","castFireBall","fireBall","manaPlayer","mana","nextTurn","handleCapacity","isAlive","pv","setIsAlive","getButtonClassName","onClick","className","disabled","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/g404/Documents/Random-Rumblee/src/Components/ButtonCapacity.js"],"sourcesContent":["\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isCurrentPlayerAlive } from \"../store/rootReducer\";\n\nconst ButtonCapacity = ({ player, ability }) => {\n  const dispatch = useDispatch();\n  const gameState = useSelector((state) => state);\n\n  const isCurrentPlayerAlive = (gameState) => {\n    const currentPlayer = gameState.players.find(\n      (player) => player.id === gameState.currentTurnPlayer\n    );\n\n  const hitMonster = (damage) => {\n    dispatch({ type: \"HIT_MONSTER\", payload: { monsterDamage: damage } });\n  };\n\n  const hitPlayer = (damage) => {\n    dispatch({\n      type: \"HIT_PLAYER\",\n      payload: { damage, playerId: player.id, manaReduction: ability.manaCost },\n    });\n  };\n\n  const healPlayer = (heal) => {\n    dispatch({\n      type: \"HEAL_PLAYER\",\n      payload: { healPlayer: { heal, id: player.id, manaCost: ability.manaCost, maxHealth: 100 } },\n    });\n  };\n\n  const castFireBall = (damage, manaCost) => {\n    dispatch({\n      type: \"FIRE_BALL\",\n      payload: { fireBall: { damage, id: player.id, manaCost } },\n    });\n  };\n\n  const manaPlayer = () => {\n    dispatch({\n      type: \"MANA_PLAYER\",\n      payload: { manaPlayer: { mana: 30, id: player.id, manaCost: ability.manaCost } },\n    });\n  };\n\n  const nextTurn = () => {\n    dispatch({ type: \"NEXT_TURN\" });\n  };\n\n  const handleCapacity = () => {\n    const isAlive = isCurrentPlayerAlive(gameState);\n\n    if (isAlive) {\n      switch (ability.type) {\n        case \"damage\":\n          if (player.pv > 0) {\n            hitMonster(ability.damage);\n          }\n          hitPlayer(ability.damage);\n          break;\n        case \"heal\":\n          healPlayer(ability.heal);\n          break;\n        case \"fireBall\":\n          castFireBall(ability.damage, ability.manaCost);\n          break;\n        case \"mana\":\n          manaPlayer();\n          break;\n        case \"playerIsAlive\":\n          // Notez que je n'ai pas ajouté de fonction pour \"playerIsAlive\" car cela ne semble pas nécessaire ici\n          break;\n        case \"nextTurn\":\n          nextTurn();\n          break;\n        default:\n          break;\n      }\n\n      setIsAlive(isCurrentPlayerAlive(gameState));\n    }\n  };\n\n\n\n  const getButtonClassName = () => {\n    switch (ability.type) {\n      case \"heal\":\n        return \"btn btn-danger m-1 btn-heal\";\n      case \"damage\":\n        return \"btn btn-success m-1 btn-attack\";\n      case \"fireBall\":\n        return \"btn btn-warning m-1 btn-fireball\";\n      case \"mana\":\n        return \"btn btn-info m-1 btn-mana\";\n      default:\n        return \"btn btn-secondary m-1\";\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handleCapacity}\n      className={getButtonClassName()}\n      disabled={!isAlive}\n    >\n      {ability.name}{\" \"}\n      <i className={ability.type === \"heal\" ? \"fas fa-heart\" : \"fas fa-bomb\"}></i>{\" \"}\n      {ability.type === \"heal\" ? `+${ability.heal}` : ability.damage}{\" \"}\n      <i className=\"fas fa-fire-alt\"></i> - {ability.manaCost} Mana\n    </button>\n  );\n};\n};\nexport default ButtonCapacity;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}