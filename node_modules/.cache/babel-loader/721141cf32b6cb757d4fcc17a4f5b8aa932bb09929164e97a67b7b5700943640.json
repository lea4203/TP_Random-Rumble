{"ast":null,"code":"var _jsxFileName = \"/home/g404/Documents/Random-Rumblee/src/Components/PlayerCard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport ButtonCapacity from \"./ButtonCapacity\";\nimport ProgressBar from \"./ProgressBar\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerCard = ({\n  player\n}) => {\n  _s();\n  const [isLarge, setIsLarge] = useState(true);\n  const dispatch = useDispatch();\n\n  // Fonction de déclenchement automatique\n  const autoTriggerAbilities = () => {\n    // Logique pour déclencher automatiquement les capacités des joueurs\n    // Vous pouvez appeler vos actions Redux ici pour déclencher les capacités automatiquement\n\n    // Exemple : Déclencher la première capacité de chaque joueur\n    player.abilities.forEach((ability, index) => {\n      if (index === 0) {\n        handleAbility(ability);\n      }\n    });\n  };\n\n  // Utiliser useEffect pour démarrer et arrêter la minuterie\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      autoTriggerAbilities();\n    }, 5000); // Exemple : déclencher toutes les 5 secondes\n\n    // Nettoyer la minuterie lors du démontage du composant\n    return () => clearInterval(intervalId);\n  }, []); // Le tableau vide [] assure que cela ne se déclenche qu'une seule fois au montage\n\n  const handleAbility = ability => {\n    // Logique pour gérer chaque capacité\n    switch (ability.type) {\n      case \"damage\":\n        // Logique pour les capacités de dommages\n        break;\n      case \"heal\":\n        // Logique pour les capacités de guérison\n        break;\n      case \"fireBall\":\n        // Logique pour la capacité fireBall\n        // Vérifiez si le joueur a assez de mana pour lancer la fireball\n        const updatedManaCostFireBall = Math.min(ability.manaCost, player.mana);\n        if (player.mana >= updatedManaCostFireBall) {\n          dispatch({\n            type: \"FIRE_BALL\",\n            payload: {\n              fireBall: {\n                damage: ability.damage,\n                id: player.id,\n                manaCost: updatedManaCostFireBall\n              }\n            }\n          });\n          // Réduit le mana après avoir vérifié que le joueur a assez de mana\n          dispatch({\n            type: \"MANA_PLAYER\",\n            payload: {\n              manaPlayer: {\n                mana: updatedManaCostFireBall,\n                id: player.id,\n                manaCost: ability.manaCost\n              }\n            }\n          });\n        } else {\n          console.log(\"Not enough mana to cast the fireball.\");\n        }\n        break;\n      // Ajoutez des cas pour d'autres types de capacités\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `col-sm-3 card ${isLarge ? 'player-large' : ''}`,\n    id: `joueur${player.id}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: `player-image ${isLarge ? 'player-image-large' : ''}`,\n        src: player.image ? require(`../assets/${player.image}`) : '',\n        alt: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        pv: player.pv,\n        pvMax: player.pvMax,\n        faType: \"fa-heart\",\n        barName: \" : pv \",\n        bgType: \"bg-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        pv: player.mana,\n        pvMax: player.manaMax,\n        faType: \"fa-fire-alt\",\n        barName: \" : mana \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: player.abilities.map((ability, index) => /*#__PURE__*/_jsxDEV(ButtonCapacity, {\n          player: player,\n          ability: ability\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerCard, \"awASWMMWSFnR2K9p+CzTG3e2emA=\", false, function () {\n  return [useDispatch];\n});\n_c = PlayerCard;\nexport default PlayerCard;\nvar _c;\n$RefreshReg$(_c, \"PlayerCard\");","map":{"version":3,"names":["React","useState","useEffect","ButtonCapacity","ProgressBar","useDispatch","jsxDEV","_jsxDEV","PlayerCard","player","_s","isLarge","setIsLarge","dispatch","autoTriggerAbilities","abilities","forEach","ability","index","handleAbility","intervalId","setInterval","clearInterval","type","updatedManaCostFireBall","Math","min","manaCost","mana","payload","fireBall","damage","id","manaPlayer","console","log","className","children","src","image","require","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","pv","pvMax","faType","barName","bgType","manaMax","map","_c","$RefreshReg$"],"sources":["/home/g404/Documents/Random-Rumblee/src/Components/PlayerCard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ButtonCapacity from \"./ButtonCapacity\";\nimport ProgressBar from \"./ProgressBar\";\nimport { useDispatch } from \"react-redux\";\n\nconst PlayerCard = ({ player }) => {\n  const [isLarge, setIsLarge] = useState(true);\n  const dispatch = useDispatch();\n\n  // Fonction de déclenchement automatique\n  const autoTriggerAbilities = () => {\n    // Logique pour déclencher automatiquement les capacités des joueurs\n    // Vous pouvez appeler vos actions Redux ici pour déclencher les capacités automatiquement\n\n    // Exemple : Déclencher la première capacité de chaque joueur\n    player.abilities.forEach((ability, index) => {\n      if (index === 0) {\n        handleAbility(ability);\n      }\n    });\n  };\n\n  // Utiliser useEffect pour démarrer et arrêter la minuterie\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      autoTriggerAbilities();\n    }, 5000); // Exemple : déclencher toutes les 5 secondes\n\n    // Nettoyer la minuterie lors du démontage du composant\n    return () => clearInterval(intervalId);\n  }, []); // Le tableau vide [] assure que cela ne se déclenche qu'une seule fois au montage\n\n  const handleAbility = (ability) => {\n    // Logique pour gérer chaque capacité\n    switch (ability.type) {\n      case \"damage\":\n        // Logique pour les capacités de dommages\n        break;\n      case \"heal\":\n        // Logique pour les capacités de guérison\n        break;\n      case \"fireBall\":\n        // Logique pour la capacité fireBall\n        // Vérifiez si le joueur a assez de mana pour lancer la fireball\n        const updatedManaCostFireBall = Math.min(ability.manaCost, player.mana);\n        if (player.mana >= updatedManaCostFireBall) {\n          dispatch({\n            type: \"FIRE_BALL\",\n            payload: { fireBall: { damage: ability.damage, id: player.id, manaCost: updatedManaCostFireBall } },\n          });\n          // Réduit le mana après avoir vérifié que le joueur a assez de mana\n          dispatch({\n            type: \"MANA_PLAYER\",\n            payload: { manaPlayer: { mana: updatedManaCostFireBall, id: player.id, manaCost: ability.manaCost } },\n          });\n        } else {\n          console.log(\"Not enough mana to cast the fireball.\");\n        }\n        break;\n      // Ajoutez des cas pour d'autres types de capacités\n      default:\n        break;\n    }\n  };\n\n  return (\n    <div className={`col-sm-3 card ${isLarge ? 'player-large' : ''}`} id={`joueur${player.id}`}>\n      <div className='card-body text-center'>\n        <img\n          className={`player-image ${isLarge ? 'player-image-large' : ''}`}\n          src={player.image ? require(`../assets/${player.image}`) : ''}\n          alt={player.name}\n        />\n\n        <h5 className='card-title'>{player.name}</h5>\n        <ProgressBar\n          pv={player.pv}\n          pvMax={player.pvMax}\n          faType='fa-heart'\n          barName=' : pv '\n          bgType='bg-danger'\n        />\n        <ProgressBar\n          pv={player.mana}\n          pvMax={player.manaMax}\n          faType='fa-fire-alt'\n          barName=' : mana '\n        />\n        <div className='row'>\n          {player.abilities.map((ability, index) => (\n            <ButtonCapacity key={index} player={player} ability={ability} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerCard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACjC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMY,QAAQ,GAAGR,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMS,oBAAoB,GAAGA,CAAA,KAAM;IACjC;IACA;;IAEA;IACAL,MAAM,CAACM,SAAS,CAACC,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAC3C,IAAIA,KAAK,KAAK,CAAC,EAAE;QACfC,aAAa,CAACF,OAAO,CAAC;MACxB;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,MAAMkB,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCP,oBAAoB,CAAC,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV;IACA,OAAO,MAAMQ,aAAa,CAACF,UAAU,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMD,aAAa,GAAIF,OAAO,IAAK;IACjC;IACA,QAAQA,OAAO,CAACM,IAAI;MAClB,KAAK,QAAQ;QACX;QACA;MACF,KAAK,MAAM;QACT;QACA;MACF,KAAK,UAAU;QACb;QACA;QACA,MAAMC,uBAAuB,GAAGC,IAAI,CAACC,GAAG,CAACT,OAAO,CAACU,QAAQ,EAAElB,MAAM,CAACmB,IAAI,CAAC;QACvE,IAAInB,MAAM,CAACmB,IAAI,IAAIJ,uBAAuB,EAAE;UAC1CX,QAAQ,CAAC;YACPU,IAAI,EAAE,WAAW;YACjBM,OAAO,EAAE;cAAEC,QAAQ,EAAE;gBAAEC,MAAM,EAAEd,OAAO,CAACc,MAAM;gBAAEC,EAAE,EAAEvB,MAAM,CAACuB,EAAE;gBAAEL,QAAQ,EAAEH;cAAwB;YAAE;UACpG,CAAC,CAAC;UACF;UACAX,QAAQ,CAAC;YACPU,IAAI,EAAE,aAAa;YACnBM,OAAO,EAAE;cAAEI,UAAU,EAAE;gBAAEL,IAAI,EAAEJ,uBAAuB;gBAAEQ,EAAE,EAAEvB,MAAM,CAACuB,EAAE;gBAAEL,QAAQ,EAAEV,OAAO,CAACU;cAAS;YAAE;UACtG,CAAC,CAAC;QACJ,CAAC,MAAM;UACLO,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACtD;QACA;MACF;MACA;QACE;IACJ;EACF,CAAC;EAED,oBACE5B,OAAA;IAAK6B,SAAS,EAAG,iBAAgBzB,OAAO,GAAG,cAAc,GAAG,EAAG,EAAE;IAACqB,EAAE,EAAG,SAAQvB,MAAM,CAACuB,EAAG,EAAE;IAAAK,QAAA,eACzF9B,OAAA;MAAK6B,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpC9B,OAAA;QACE6B,SAAS,EAAG,gBAAezB,OAAO,GAAG,oBAAoB,GAAG,EAAG,EAAE;QACjE2B,GAAG,EAAE7B,MAAM,CAAC8B,KAAK,GAAGC,OAAO,CAAE,aAAY/B,MAAM,CAAC8B,KAAM,EAAC,CAAC,GAAG,EAAG;QAC9DE,GAAG,EAAEhC,MAAM,CAACiC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CAAC,eAEFvC,OAAA;QAAI6B,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAE5B,MAAM,CAACiC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC7CvC,OAAA,CAACH,WAAW;QACV2C,EAAE,EAAEtC,MAAM,CAACsC,EAAG;QACdC,KAAK,EAAEvC,MAAM,CAACuC,KAAM;QACpBC,MAAM,EAAC,UAAU;QACjBC,OAAO,EAAC,QAAQ;QAChBC,MAAM,EAAC;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACFvC,OAAA,CAACH,WAAW;QACV2C,EAAE,EAAEtC,MAAM,CAACmB,IAAK;QAChBoB,KAAK,EAAEvC,MAAM,CAAC2C,OAAQ;QACtBH,MAAM,EAAC,aAAa;QACpBC,OAAO,EAAC;MAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC,eACFvC,OAAA;QAAK6B,SAAS,EAAC,KAAK;QAAAC,QAAA,EACjB5B,MAAM,CAACM,SAAS,CAACsC,GAAG,CAAC,CAACpC,OAAO,EAAEC,KAAK,kBACnCX,OAAA,CAACJ,cAAc;UAAaM,MAAM,EAAEA,MAAO;UAACQ,OAAO,EAAEA;QAAQ,GAAxCC,KAAK;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAqC,CAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpC,EAAA,CA3FIF,UAAU;EAAA,QAEGH,WAAW;AAAA;AAAAiD,EAAA,GAFxB9C,UAAU;AA6FhB,eAAeA,UAAU;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}