{"ast":null,"code":"const initialState = {\n  players: [{\n    name: \"John\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 1,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: 30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jack\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 2,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: 30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jessy\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 3,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: 30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jenny\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 4,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: 30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }],\n  monster: {\n    pv: 800,\n    pvMax: 800\n  },\n  currentTurnPlayer: 1\n};\nfunction rootReducer(state = initialState, action) {\n  const currentPlayerId = state.currentTurnPlayer;\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const {\n        monsterDamage\n      } = action.payload;\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: Math.max(state.monster.pv - monsterDamage, 0)\n        }\n      };\n    case \"HIT_PLAYER\":\n      const {\n        damage,\n        playerId\n      } = action.payload;\n      const attackingPlayer = state.players.find(player => player.id === playerId);\n      if (attackingPlayer && attackingPlayer.mana >= attackingPlayer.abilities.find(a => a.type === 'damage').manaCost) {\n        const updatedPlayers = state.players.map(player => player.id === playerId ? {\n          ...player,\n          pv: Math.max(Math.min(player.pv - damage, player.pvMax), 0),\n          mana: Math.max(player.mana - player.abilities.find(a => a.type === 'damage').manaCost, 0)\n        } : player);\n        return {\n          ...state,\n          players: updatedPlayers\n        };\n      }\n      // Si le joueur n'a pas assez de mana, retournez simplement l'état actuel\n      return state;\n    case \"HEAL_PLAYER\":\n      const {\n        healPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax)\n            };\n          }\n          return player;\n        })\n      };\n    case \"FIRE_BALL\":\n      const currentPlayer = state.players.find(player => player.id === currentPlayerId);\n      if (currentPlayer && !currentPlayer.hasPerformedAction) {\n        const {\n          fireBall\n        } = action.payload;\n        const updatedPlayers = state.players.map(player => player.id === fireBall.id ? {\n          ...player,\n          pv: Math.max(player.pv - fireBall.damage, 0),\n          mana: Math.max(player.mana - fireBall.manaCost, 0),\n          hasPerformedAction: true\n        } : player);\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0)\n          }\n        };\n      }\n      return state;\n    case \"MANA_PLAYER\":\n      const {\n        manaPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax)\n            };\n          }\n          return player;\n        })\n      };\n    case \"NEXT_TURN\":\n      const nextTurnPlayerId = currentPlayerId % state.players.length + 1;\n      const resetPlayers = state.players.map(player => ({\n        ...player,\n        hasPerformedAction: false\n      }));\n      return {\n        ...state,\n        players: resetPlayers,\n        currentTurnPlayer: nextTurnPlayerId\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","players","name","pv","pvMax","mana","manaMax","id","abilities","damage","manaCost","type","heal","monster","currentTurnPlayer","rootReducer","state","action","currentPlayerId","monsterDamage","payload","Math","max","playerId","attackingPlayer","find","player","a","updatedPlayers","map","min","healPlayer","currentPlayer","hasPerformedAction","fireBall","manaPlayer","nextTurnPlayerId","length","resetPlayers"],"sources":["/home/g404/Documents/Random-Rumblee/src/store/rootReducer.js"],"sourcesContent":["const initialState = {\n  players: [\n    {\n      name: \"John\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 1,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: 30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jack\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 2,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: 30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jessy\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 3,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: 30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jenny\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 4,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: 30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n  ],\n\n  monster: {\n    pv: 800,\n    pvMax: 800,\n  },\n  currentTurnPlayer: 1,\n};\n\nfunction rootReducer(state = initialState, action) {\n  const currentPlayerId = state.currentTurnPlayer;\n\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const { monsterDamage } = action.payload;\n    \n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: Math.max(state.monster.pv - monsterDamage, 0),\n        },\n      };\n\n      case \"HIT_PLAYER\":\n        const { damage, playerId } = action.payload;\n        const attackingPlayer = state.players.find(player => player.id === playerId);\n      \n        if (attackingPlayer && attackingPlayer.mana >= attackingPlayer.abilities.find(a => a.type === 'damage').manaCost) {\n          const updatedPlayers = state.players.map((player) =>\n            player.id === playerId\n              ? {\n                ...player,\n                pv: Math.max(Math.min(player.pv - damage, player.pvMax), 0),\n                mana: Math.max(player.mana - player.abilities.find(a => a.type === 'damage').manaCost, 0),\n              }\n              : player\n          );\n      \n          return {\n            ...state,\n            players: updatedPlayers,\n          };\n        }\n        // Si le joueur n'a pas assez de mana, retournez simplement l'état actuel\n        return state;\n      \n\n    case \"HEAL_PLAYER\":\n      const { healPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax),\n            };\n          }\n          return player;\n        }),\n      };\n\n    case \"FIRE_BALL\":\n      const currentPlayer = state.players.find(player => player.id === currentPlayerId);\n\n      if (currentPlayer && !currentPlayer.hasPerformedAction) {\n        const { fireBall } = action.payload;\n        const updatedPlayers = state.players.map(player =>\n          player.id === fireBall.id\n            ? {\n              ...player,\n              pv: Math.max(player.pv - fireBall.damage, 0),\n              mana: Math.max(player.mana - fireBall.manaCost, 0),\n              hasPerformedAction: true,\n            }\n            : player\n        );\n\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0),\n          },\n        };\n      }\n      return state;\n\n    case \"MANA_PLAYER\":\n      const { manaPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax),\n            };\n          }\n          return player;\n        }),\n      };\n\n    case \"NEXT_TURN\":\n      const nextTurnPlayerId = (currentPlayerId % state.players.length) + 1;\n\n      const resetPlayers = state.players.map((player) => ({\n        ...player,\n        hasPerformedAction: false,\n      }));\n\n      return {\n        ...state,\n        players: resetPlayers,\n        currentTurnPlayer: nextTurnPlayerId,\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}