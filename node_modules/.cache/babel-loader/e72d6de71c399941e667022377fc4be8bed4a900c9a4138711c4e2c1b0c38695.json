{"ast":null,"code":"const initialState = {\n  players: [{\n    name: \"John\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 1,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: -30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jack\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 2,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jessy\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 3,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jenny\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 4,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }],\n  monster: {\n    pv: 800,\n    pvMax: 800\n  }\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      if (!state.players[state.currentTurnPlayer - 1].hasPerformedAction) {\n        // Le joueur n'a pas encore effectué d'action\n        return {\n          ...state,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - action.payload, 0)\n          },\n          players: state.players.map((player, index) => ({\n            ...player,\n            hasPerformedAction: index + 1 === state.currentTurnPlayer\n          }))\n        };\n      }\n      return state;\n    case \"HIT_PLAYER\":\n      const {\n        damage,\n        playerId\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => player.id === playerId ? {\n          ...player,\n          pv: Math.max(Math.min(player.pv - damage, player.pvMax), 0) // Limitez les pv entre 0 et pvMax\n        } : player)\n      };\n    case \"HEAL_PLAYER\":\n      const {\n        healPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax) // Limitez les pv à pvMax\n            };\n          }\n          return player;\n        })\n      };\n    case \"FIRE_BALL\":\n      if (!state.players[state.currentTurnPlayer - 1].hasPerformedAction) {\n        const {\n          fireBall\n        } = action.payload;\n        const updatedPlayers = state.players.map(player => player.id === fireBall.id ? {\n          ...player,\n          pv: Math.max(player.pv - fireBall.damage, 0),\n          mana: Math.max(player.mana - fireBall.manaCost, 0),\n          hasPerformedAction: true\n        } : player);\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0)\n          }\n        };\n      }\n      return state;\n    case \"MANA_PLAYER\":\n      const {\n        manaPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax) // Limitez la mana à manaMax\n            };\n          }\n          return player;\n        })\n      };\n    case \"NEXT_TURN\":\n      const currentPlayerId = state.currentTurnPlayer;\n      const nextTurnPlayerId = currentPlayerId % state.players.length + 1;\n      const allPlayersPlayed = state.players.every(player => player.hasPerformedAction);\n      if (allPlayersPlayed) {\n        const resetPlayers = state.players.map(player => ({\n          ...player,\n          hasPerformedAction: false\n        }));\n        return {\n          ...state,\n          players: resetPlayers,\n          currentTurnPlayer: nextTurnPlayerId\n        };\n      } else {\n        const updatedPlayers = state.players.map(player => player.id === currentPlayerId ? {\n          ...player,\n          hasPerformedAction: true\n        } : player);\n        return {\n          ...state,\n          players: updatedPlayers\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","players","name","pv","pvMax","mana","manaMax","id","abilities","damage","manaCost","type","heal","monster","rootReducer","state","action","currentTurnPlayer","hasPerformedAction","Math","max","payload","map","player","index","playerId","min","healPlayer","fireBall","updatedPlayers","manaPlayer","currentPlayerId","nextTurnPlayerId","length","allPlayersPlayed","every","resetPlayers"],"sources":["/home/g404/Documents/random-rumble/src/store/rootReducer.js"],"sourcesContent":["const initialState = {\n  players: [\n    {\n      name: \"John\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 1,\n      abilities: [\n        {\n          name: \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: -30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jack\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 2,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n      ],\n    },\n    {\n      name: \"Jessy\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 3,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n\n      ],\n    },\n    {\n      name: \"Jenny\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 4,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n\n      ],\n    },\n  ],\n\n  monster: {\n    pv: 800,\n    pvMax: 800,\n  },\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      if (!state.players[state.currentTurnPlayer - 1].hasPerformedAction) {\n        // Le joueur n'a pas encore effectué d'action\n        return {\n          ...state,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - action.payload, 0),\n          },\n          players: state.players.map((player, index) => ({\n            ...player,\n            hasPerformedAction: index + 1 === state.currentTurnPlayer,\n          })),\n        };\n      }\n      return state;\n\n    case \"HIT_PLAYER\":\n      const { damage, playerId } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) =>\n          player.id === playerId\n            ? {\n              ...player,\n              pv: Math.max(Math.min(player.pv - damage, player.pvMax), 0), // Limitez les pv entre 0 et pvMax\n            }\n            : player\n        ),\n      };\n\n    case \"HEAL_PLAYER\":\n      const { healPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax), // Limitez les pv à pvMax\n            };\n          }\n          return player;\n        }),\n      };\n\n    case \"FIRE_BALL\":\n      if (!state.players[state.currentTurnPlayer - 1].hasPerformedAction) {\n        const { fireBall } = action.payload;\n        const updatedPlayers = state.players.map(player =>\n          player.id === fireBall.id\n            ? {\n              ...player,\n              pv: Math.max(player.pv - fireBall.damage, 0),\n              mana: Math.max(player.mana - fireBall.manaCost, 0),\n              hasPerformedAction: true,\n            }\n            : player\n        );\n\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0),\n          },\n        };\n      }\n      return state;\n\n    case \"MANA_PLAYER\":\n      const { manaPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax), // Limitez la mana à manaMax\n            };\n          }\n          return player;\n        }),\n      };\n\n    case \"NEXT_TURN\":\n      const currentPlayerId = state.currentTurnPlayer;\n      const nextTurnPlayerId = currentPlayerId % state.players.length + 1;\n\n      const allPlayersPlayed = state.players.every(player => player.hasPerformedAction);\n\n      if (allPlayersPlayed) {\n        const resetPlayers = state.players.map(player => ({\n          ...player,\n          hasPerformedAction: false\n        }));\n\n        return {\n          ...state,\n          players: resetPlayers,\n          currentTurnPlayer: nextTurnPlayerId,\n        };\n      } else {\n        const updatedPlayers = state.players.map(player =>\n          player.id === currentPlayerId ? { ...player, hasPerformedAction: true }\n            : player\n        );\n\n        return {\n          ...state,\n          players: updatedPlayers,\n        };\n      }\n\n\n\n\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,OAAO,EAAE,CACP;IACEC,IAAI,EAAE,MAAM;IACZC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,CACT;MACEN,IAAI,EAAE,SAAS;MACfO,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC,EACD;MACET,IAAI,EAAE,QAAQ;MACdU,IAAI,EAAE,CAAC,EAAE;MACTF,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC,EACD;MACET,IAAI,EAAE,wBAAwB;MAC9BO,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE;IACR,CAAC,EACD;MACET,IAAI,EAAE,mBAAmB;MACzBG,IAAI,EAAE,EAAE;MACRK,QAAQ,EAAE,CAAC,EAAE;MAAE;MACfC,IAAI,EAAE;IACR,CAAC;EAGL,CAAC,EACD;IACET,IAAI,EAAE,MAAM;IACZC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,CACT;MAAEN,IAAI,EAAE,SAAS;MAAEO,MAAM,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAC,EAC7D;MAAET,IAAI,EAAE,QAAQ;MAAEU,IAAI,EAAE,CAAC,EAAE;MAAEF,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC,EACzD;MAAET,IAAI,EAAE,wBAAwB;MAAEO,MAAM,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAW,CAAC,EAC9E;MAAET,IAAI,EAAE,mBAAmB;MAAEG,IAAI,EAAE,CAAC,EAAE;MAAEK,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC;EAExE,CAAC,EACD;IACET,IAAI,EAAE,OAAO;IACbC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,CACT;MAAEN,IAAI,EAAE,SAAS;MAAEO,MAAM,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAC,EAC7D;MAAET,IAAI,EAAE,QAAQ;MAAEU,IAAI,EAAE,CAAC,EAAE;MAAEF,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC,EACzD;MAAET,IAAI,EAAE,wBAAwB;MAAEO,MAAM,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAW,CAAC,EAC9E;MAAET,IAAI,EAAE,mBAAmB;MAAEG,IAAI,EAAE,CAAC,EAAE;MAAEK,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC;EAGxE,CAAC,EACD;IACET,IAAI,EAAE,OAAO;IACbC,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE,GAAG;IACVC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,EAAE,EAAE,CAAC;IACLC,SAAS,EAAE,CACT;MAAEN,IAAI,EAAE,SAAS;MAAEO,MAAM,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAS,CAAC,EAC7D;MAAET,IAAI,EAAE,QAAQ;MAAEU,IAAI,EAAE,CAAC,EAAE;MAAEF,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC,EACzD;MAAET,IAAI,EAAE,wBAAwB;MAAEO,MAAM,EAAE,EAAE;MAAEC,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAW,CAAC,EAC9E;MAAET,IAAI,EAAE,mBAAmB;MAAEG,IAAI,EAAE,CAAC,EAAE;MAAEK,QAAQ,EAAE,EAAE;MAAEC,IAAI,EAAE;IAAO,CAAC;EAGxE,CAAC,CACF;EAEDE,OAAO,EAAE;IACPV,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE;EACT;AACF,CAAC;AAED,SAASU,WAAWA,CAACC,KAAK,GAAGf,YAAY,EAAEgB,MAAM,EAAE;EACjD,QAAQA,MAAM,CAACL,IAAI;IACjB,KAAK,aAAa;MAChB,IAAI,CAACI,KAAK,CAACd,OAAO,CAACc,KAAK,CAACE,iBAAiB,GAAG,CAAC,CAAC,CAACC,kBAAkB,EAAE;QAClE;QACA,OAAO;UACL,GAAGH,KAAK;UACRF,OAAO,EAAE;YACP,GAAGE,KAAK,CAACF,OAAO;YAChBV,EAAE,EAAEgB,IAAI,CAACC,GAAG,CAACL,KAAK,CAACF,OAAO,CAACV,EAAE,GAAGa,MAAM,CAACK,OAAO,EAAE,CAAC;UACnD,CAAC;UACDpB,OAAO,EAAEc,KAAK,CAACd,OAAO,CAACqB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,MAAM;YAC7C,GAAGD,MAAM;YACTL,kBAAkB,EAAEM,KAAK,GAAG,CAAC,KAAKT,KAAK,CAACE;UAC1C,CAAC,CAAC;QACJ,CAAC;MACH;MACA,OAAOF,KAAK;IAEd,KAAK,YAAY;MACf,MAAM;QAAEN,MAAM;QAAEgB;MAAS,CAAC,GAAGT,MAAM,CAACK,OAAO;MAC3C,OAAO;QACL,GAAGN,KAAK;QACRd,OAAO,EAAEc,KAAK,CAACd,OAAO,CAACqB,GAAG,CAAEC,MAAM,IAChCA,MAAM,CAAChB,EAAE,KAAKkB,QAAQ,GAClB;UACA,GAAGF,MAAM;UACTpB,EAAE,EAAEgB,IAAI,CAACC,GAAG,CAACD,IAAI,CAACO,GAAG,CAACH,MAAM,CAACpB,EAAE,GAAGM,MAAM,EAAEc,MAAM,CAACnB,KAAK,CAAC,EAAE,CAAC,CAAC,CAAE;QAC/D,CAAC,GACCmB,MACN;MACF,CAAC;IAEH,KAAK,aAAa;MAChB,MAAM;QAAEI;MAAW,CAAC,GAAGX,MAAM,CAACK,OAAO;MACrC,OAAO;QACL,GAAGN,KAAK;QACRd,OAAO,EAAEc,KAAK,CAACd,OAAO,CAACqB,GAAG,CAAEC,MAAM,IAAK;UACrC,IAAIA,MAAM,CAAChB,EAAE,KAAKoB,UAAU,CAACpB,EAAE,EAAE;YAC/B,OAAO;cACL,GAAGgB,MAAM;cACTpB,EAAE,EAAEgB,IAAI,CAACO,GAAG,CAACH,MAAM,CAACpB,EAAE,GAAGwB,UAAU,CAACf,IAAI,EAAEW,MAAM,CAACnB,KAAK,CAAC,CAAE;YAC3D,CAAC;UACH;UACA,OAAOmB,MAAM;QACf,CAAC;MACH,CAAC;IAEH,KAAK,WAAW;MACd,IAAI,CAACR,KAAK,CAACd,OAAO,CAACc,KAAK,CAACE,iBAAiB,GAAG,CAAC,CAAC,CAACC,kBAAkB,EAAE;QAClE,MAAM;UAAEU;QAAS,CAAC,GAAGZ,MAAM,CAACK,OAAO;QACnC,MAAMQ,cAAc,GAAGd,KAAK,CAACd,OAAO,CAACqB,GAAG,CAACC,MAAM,IAC7CA,MAAM,CAAChB,EAAE,KAAKqB,QAAQ,CAACrB,EAAE,GACrB;UACA,GAAGgB,MAAM;UACTpB,EAAE,EAAEgB,IAAI,CAACC,GAAG,CAACG,MAAM,CAACpB,EAAE,GAAGyB,QAAQ,CAACnB,MAAM,EAAE,CAAC,CAAC;UAC5CJ,IAAI,EAAEc,IAAI,CAACC,GAAG,CAACG,MAAM,CAAClB,IAAI,GAAGuB,QAAQ,CAAClB,QAAQ,EAAE,CAAC,CAAC;UAClDQ,kBAAkB,EAAE;QACtB,CAAC,GACCK,MACN,CAAC;QAED,OAAO;UACL,GAAGR,KAAK;UACRd,OAAO,EAAE4B,cAAc;UACvBhB,OAAO,EAAE;YACP,GAAGE,KAAK,CAACF,OAAO;YAChBV,EAAE,EAAEgB,IAAI,CAACC,GAAG,CAACL,KAAK,CAACF,OAAO,CAACV,EAAE,GAAGyB,QAAQ,CAACnB,MAAM,EAAE,CAAC;UACpD;QACF,CAAC;MACH;MACA,OAAOM,KAAK;IAEd,KAAK,aAAa;MAChB,MAAM;QAAEe;MAAW,CAAC,GAAGd,MAAM,CAACK,OAAO;MACrC,OAAO;QACL,GAAGN,KAAK;QACRd,OAAO,EAAEc,KAAK,CAACd,OAAO,CAACqB,GAAG,CAAEC,MAAM,IAAK;UACrC,IAAIA,MAAM,CAAChB,EAAE,KAAKuB,UAAU,CAACvB,EAAE,EAAE;YAC/B,OAAO;cACL,GAAGgB,MAAM;cACTlB,IAAI,EAAEc,IAAI,CAACO,GAAG,CAACH,MAAM,CAAClB,IAAI,GAAGyB,UAAU,CAACzB,IAAI,EAAEkB,MAAM,CAACjB,OAAO,CAAC,CAAE;YACjE,CAAC;UACH;UACA,OAAOiB,MAAM;QACf,CAAC;MACH,CAAC;IAEH,KAAK,WAAW;MACd,MAAMQ,eAAe,GAAGhB,KAAK,CAACE,iBAAiB;MAC/C,MAAMe,gBAAgB,GAAGD,eAAe,GAAGhB,KAAK,CAACd,OAAO,CAACgC,MAAM,GAAG,CAAC;MAEnE,MAAMC,gBAAgB,GAAGnB,KAAK,CAACd,OAAO,CAACkC,KAAK,CAACZ,MAAM,IAAIA,MAAM,CAACL,kBAAkB,CAAC;MAEjF,IAAIgB,gBAAgB,EAAE;QACpB,MAAME,YAAY,GAAGrB,KAAK,CAACd,OAAO,CAACqB,GAAG,CAACC,MAAM,KAAK;UAChD,GAAGA,MAAM;UACTL,kBAAkB,EAAE;QACtB,CAAC,CAAC,CAAC;QAEH,OAAO;UACL,GAAGH,KAAK;UACRd,OAAO,EAAEmC,YAAY;UACrBnB,iBAAiB,EAAEe;QACrB,CAAC;MACH,CAAC,MAAM;QACL,MAAMH,cAAc,GAAGd,KAAK,CAACd,OAAO,CAACqB,GAAG,CAACC,MAAM,IAC7CA,MAAM,CAAChB,EAAE,KAAKwB,eAAe,GAAG;UAAE,GAAGR,MAAM;UAAEL,kBAAkB,EAAE;QAAK,CAAC,GACnEK,MACN,CAAC;QAED,OAAO;UACL,GAAGR,KAAK;UACRd,OAAO,EAAE4B;QACX,CAAC;MACH;IAMF;MACE,OAAOd,KAAK;EAChB;AACF;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}