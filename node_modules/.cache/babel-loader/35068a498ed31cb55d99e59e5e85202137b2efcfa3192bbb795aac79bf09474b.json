{"ast":null,"code":"let initialState = {\n  players: [{\n    name: \"John\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 1,\n    abilities: [{\n      name: \"Heal\",\n      label: \"Heal\",\n      damage: 10,\n      manaCost: 20\n    }, {\n      name: \"Damage\",\n      label: \"Hit\",\n      damage: 20,\n      manaCost: 10\n    }]\n  }, {\n    name: \"Jack\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 2,\n    abilities: [{\n      name: \"Heal\",\n      label: \"Heal\",\n      damage: 10,\n      manaCost: 20\n    }, {\n      name: \"Damage\",\n      label: \"Hit\",\n      damage: 20,\n      manaCost: 10\n    }]\n  }, {\n    name: \"Jessy\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 3,\n    abilities: [{\n      name: \"Heal\",\n      label: \"Heal\",\n      damage: 10,\n      manaCost: 20\n    }, {\n      name: \"Damage\",\n      label: \"Hit\",\n      damage: 20,\n      manaCost: 10\n    }]\n  }, {\n    name: \"Jenny\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 4,\n    abilities: [{\n      name: \"Heal\",\n      label: \"Heal\",\n      damage: 10,\n      manaCost: 20\n    }, {\n      name: \"Damage\",\n      label: \"Hit\",\n      damage: 20,\n      manaCost: 10\n    }]\n  }],\n  monster: {\n    pv: 800,\n    pvMax: 800\n  }\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const {\n        damage\n      } = action.payload;\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: state.monster.pv - damage\n        }\n      };\n    case \"HIT_PLAYER\":\n      const {\n        damage: damagePlayer,\n        playerId\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === playerId) {\n            return {\n              ...player,\n              pv: player.pv - damagePlayer\n            };\n          }\n          return player;\n        })\n      };\n    case \"HEAL_PLAYER\":\n      const {\n        healPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: player.pv + healPlayer.heal\n            };\n          }\n          return player;\n        })\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","players","name","pv","pvMax","mana","manaMax","id","abilities","label","damage","manaCost","monster","rootReducer","state","action","type","payload","damagePlayer","playerId","map","player","healPlayer","heal"],"sources":["/home/g404/Documents/rumble-boilerplate/src/store/rootReducer.js"],"sourcesContent":["let initialState = {\n  players: [\n    { \n      name: \"John\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 1,\n      abilities: [\n        { name: \"Heal\", label: \"Heal\", damage: 10, manaCost: 20 },\n        { name: \"Damage\", label: \"Hit\", damage: 20, manaCost: 10 }\n      ]\n    },\n    { \n      name: \"Jack\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 2,\n      abilities: [\n        { name: \"Heal\", label: \"Heal\", damage: 10, manaCost: 20 },\n        { name: \"Damage\", label: \"Hit\", damage: 20, manaCost: 10 }\n      ]\n    },\n    { \n      name: \"Jessy\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 3,\n      abilities: [\n        { name: \"Heal\", label: \"Heal\", damage: 10, manaCost: 20 },\n        { name: \"Damage\", label: \"Hit\", damage: 20, manaCost: 10 }\n      ]\n    },\n    { \n      name: \"Jenny\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 4,\n      abilities: [\n        { name: \"Heal\", label: \"Heal\", damage: 10, manaCost: 20 },\n        { name: \"Damage\", label: \"Hit\", damage: 20, manaCost: 10 }\n      ]\n    }\n  ],\n\n  monster: {\n    pv: 800,\n    pvMax: 800\n  }\n};\n\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const { damage } = action.payload;\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: state.monster.pv - damage,\n        },\n      };\n\n\n      case \"HIT_PLAYER\":\n        const { damage: damagePlayer, playerId } = action.payload;\n        return {\n          ...state,\n          players: state.players.map((player) => {\n            if (player.id === playerId) {\n              return {\n                ...player,\n                pv: player.pv - damagePlayer,\n              };\n            }\n            return player;\n          }),\n        };\n\n        \n        case \"HEAL_PLAYER\":\n          const {healPlayer} = action.payload;\n\n          return {\n            ...state,\n            players: state.players.map((player) => {\n              if (player.id === healPlayer.id) {\n                return {\n                  ...player,\n                  pv: player.pv + healPlayer.heal,\n                };\n              }\n              return player;\n            }),\n          };\n\n\n        \n\n    default:\n      return state;\n  }\n\n\n}\n\nexport default rootReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}