{"ast":null,"code":"let initialState = {\n  players: [{\n    name: \"John\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 1\n  }, {\n    name: \"Jack\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 2\n  }, {\n    name: \"Jessy\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 3\n  }, {\n    name: \"Jenny\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 4\n  }],\n  monster: {\n    pv: 800,\n    pvMax: 800\n  }\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: state.monster.pv - action.payload\n        }\n      };\n    case \"HIT_PLAYER\":\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === action.payload.playerId) {\n            return {\n              ...player,\n              pv: player.pv - action.payload.damage\n            };\n          } else {\n            return player;\n          }\n        })\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","players","name","pv","pvMax","mana","manaMax","id","monster","rootReducer","state","action","type","payload","map","player","playerId","damage"],"sources":["/home/g404/Documents/rumble-boilerplate/src/store/rootReducer.js"],"sourcesContent":["let initialState = {\n  players: [\n    { name: \"John\", pv: 100, pvMax: 100, mana: 30, manaMax: 30, id: 1 },\n    { name: \"Jack\", pv: 100, pvMax: 100, mana: 30, manaMax: 30, id: 2 },\n    { name: \"Jessy\", pv: 100, pvMax: 100, mana: 30, manaMax: 30, id: 3 },\n    { name: \"Jenny\", pv: 100, pvMax: 100, mana: 30, manaMax: 30, id: 4 },\n  ],\n\n  monster: {\n    pv: 800,\n    pvMax: 800\n  },\n\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: state.monster.pv - action.payload\n        }\n      };\n      case \"HIT_PLAYER\":\n        return {\n          ...state,\n          players: state.players.map((player) => {\n            if (player.id === action.payload.playerId) {\n              return {\n                ...player,\n                pv: player.pv - action.payload.damage\n              }\n            } else {\n              return player;\n            }\n          })\n        };\n      \n    default:\n      return state;\n  }\n\n\n}\n\nexport default rootReducer;\n"],"mappings":"AAAA,IAAIA,YAAY,GAAG;EACjBC,OAAO,EAAE,CACP;IAAEC,IAAI,EAAE,MAAM;IAAEC,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAE,CAAC,EACnE;IAAEL,IAAI,EAAE,MAAM;IAAEC,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAE,CAAC,EACnE;IAAEL,IAAI,EAAE,OAAO;IAAEC,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAE,CAAC,EACpE;IAAEL,IAAI,EAAE,OAAO;IAAEC,EAAE,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,IAAI,EAAE,EAAE;IAAEC,OAAO,EAAE,EAAE;IAAEC,EAAE,EAAE;EAAE,CAAC,CACrE;EAEDC,OAAO,EAAE;IACPL,EAAE,EAAE,GAAG;IACPC,KAAK,EAAE;EACT;AAEF,CAAC;AAED,SAASK,WAAWA,CAACC,KAAK,GAAGV,YAAY,EAAEW,MAAM,EAAE;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,OAAO;QACL,GAAGF,KAAK;QACRF,OAAO,EAAE;UACP,GAAGE,KAAK,CAACF,OAAO;UAChBL,EAAE,EAAEO,KAAK,CAACF,OAAO,CAACL,EAAE,GAAGQ,MAAM,CAACE;QAChC;MACF,CAAC;IACD,KAAK,YAAY;MACf,OAAO;QACL,GAAGH,KAAK;QACRT,OAAO,EAAES,KAAK,CAACT,OAAO,CAACa,GAAG,CAAEC,MAAM,IAAK;UACrC,IAAIA,MAAM,CAACR,EAAE,KAAKI,MAAM,CAACE,OAAO,CAACG,QAAQ,EAAE;YACzC,OAAO;cACL,GAAGD,MAAM;cACTZ,EAAE,EAAEY,MAAM,CAACZ,EAAE,GAAGQ,MAAM,CAACE,OAAO,CAACI;YACjC,CAAC;UACH,CAAC,MAAM;YACL,OAAOF,MAAM;UACf;QACF,CAAC;MACH,CAAC;IAEL;MACE,OAAOL,KAAK;EAChB;AAGF;AAEA,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}