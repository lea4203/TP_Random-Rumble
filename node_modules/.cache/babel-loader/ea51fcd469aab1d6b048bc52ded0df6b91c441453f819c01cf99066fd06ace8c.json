{"ast":null,"code":"var _jsxFileName = \"/home/g404/Documents/Random-Rumblee/src/Components/ButtonCapacity.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isCurrentPlayerAlive } from \"../store/rootReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonCapacity = ({\n  player,\n  ability\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const gameState = useSelector(state => state);\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n  const hitMonster = damage => {\n    dispatch({\n      type: \"HIT_MONSTER\",\n      payload: {\n        monsterDamage: damage\n      }\n    });\n  };\n  const hitPlayer = damage => {\n    dispatch({\n      type: \"HIT_PLAYER\",\n      payload: {\n        damage,\n        playerId: player.id,\n        manaReduction: ability.manaCost\n      }\n    });\n  };\n  const healPlayer = heal => {\n    dispatch({\n      type: \"HEAL_PLAYER\",\n      payload: {\n        healPlayer: {\n          heal,\n          id: player.id,\n          manaCost: ability.manaCost,\n          maxHealth: 100\n        }\n      }\n    });\n  };\n  const castFireBall = (damage, manaCost) => {\n    dispatch({\n      type: \"FIRE_BALL\",\n      payload: {\n        fireBall: {\n          damage,\n          id: player.id,\n          manaCost\n        }\n      }\n    });\n  };\n  const manaPlayer = () => {\n    dispatch({\n      type: \"MANA_PLAYER\",\n      payload: {\n        manaPlayer: {\n          mana: 30,\n          id: player.id,\n          manaCost: ability.manaCost\n        }\n      }\n    });\n  };\n  const nextTurn = () => {\n    dispatch({\n      type: \"NEXT_TURN\"\n    });\n  };\n  const handleCapacity = () => {\n    const isAlive = isCurrentPlayerAlive(gameState);\n    if (isAlive && !isButtonDisabled) {\n      switch (ability.type) {\n        case \"damage\":\n          if (player.pv > 0) {\n            hitMonster(ability.damage);\n          }\n          hitPlayer(ability.damage);\n          break;\n        case \"heal\":\n          healPlayer(ability.heal);\n          break;\n        case \"fireBall\":\n          castFireBall(ability.damage, ability.manaCost);\n          break;\n        case \"mana\":\n          manaPlayer();\n          break;\n        case \"playerIsAlive\":\n          // Notez que je n'ai pas ajouté de fonction pour \"playerIsAlive\" car cela ne semble pas nécessaire ici\n          break;\n        case \"nextTurn\":\n          nextTurn();\n          break;\n        default:\n          break;\n      }\n      setIsButtonDisabled(true);\n\n      // Réactivez le bouton après un délai de 2000 millisecondes (2 secondes)\n      setTimeout(() => {\n        setIsButtonDisabled(false);\n      }, 2000);\n    }\n  };\n  const getButtonClassName = () => {\n    switch (ability.type) {\n      case \"heal\":\n        return \"btn btn-danger m-1 btn-heal\";\n      case \"damage\":\n        return \"btn btn-success m-1 btn-attack\";\n      case \"fireBall\":\n        return \"btn btn-warning m-1 btn-fireball\";\n      case \"mana\":\n        return \"btn btn-info m-1 btn-mana\";\n      default:\n        return \"btn btn-secondary m-1\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: handleCapacity,\n    className: getButtonClassName(),\n    disabled: !isAlive,\n    children: [ability.name, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n      className: ability.type === \"heal\" ? \"fas fa-heart\" : \"fas fa-bomb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), \" \", ability.type === \"heal\" ? `+${ability.heal}` : ability.damage, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-fire-alt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), \" - \", ability.manaCost, \" Mana\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonCapacity, \"vadZ3TX5AbWOidPqAbahD5WnQRg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ButtonCapacity;\nexport default ButtonCapacity;\nvar _c;\n$RefreshReg$(_c, \"ButtonCapacity\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","isCurrentPlayerAlive","jsxDEV","_jsxDEV","ButtonCapacity","player","ability","_s","dispatch","gameState","state","isButtonDisabled","setIsButtonDisabled","hitMonster","damage","type","payload","monsterDamage","hitPlayer","playerId","id","manaReduction","manaCost","healPlayer","heal","maxHealth","castFireBall","fireBall","manaPlayer","mana","nextTurn","handleCapacity","isAlive","pv","setTimeout","getButtonClassName","onClick","className","disabled","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/g404/Documents/Random-Rumblee/src/Components/ButtonCapacity.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isCurrentPlayerAlive } from \"../store/rootReducer\";\n\nconst ButtonCapacity = ({ player, ability }) => {\n  const dispatch = useDispatch();\n  const gameState = useSelector((state) => state);\n\n  const [isButtonDisabled, setIsButtonDisabled] = useState(false);\n\n  const hitMonster = (damage) => {\n    dispatch({ type: \"HIT_MONSTER\", payload: { monsterDamage: damage } });\n  };\n\n  const hitPlayer = (damage) => {\n    dispatch({\n      type: \"HIT_PLAYER\",\n      payload: { damage, playerId: player.id, manaReduction: ability.manaCost },\n    });\n  };\n\n  const healPlayer = (heal) => {\n    dispatch({\n      type: \"HEAL_PLAYER\",\n      payload: { healPlayer: { heal, id: player.id, manaCost: ability.manaCost, maxHealth: 100 } },\n    });\n  };\n\n  const castFireBall = (damage, manaCost) => {\n    dispatch({\n      type: \"FIRE_BALL\",\n      payload: { fireBall: { damage, id: player.id, manaCost } },\n    });\n  };\n\n  const manaPlayer = () => {\n    dispatch({\n      type: \"MANA_PLAYER\",\n      payload: { manaPlayer: { mana: 30, id: player.id, manaCost: ability.manaCost } },\n    });\n  };\n\n  const nextTurn = () => {\n    dispatch({ type: \"NEXT_TURN\" });\n  };\n\n  const handleCapacity = () => {\n    const isAlive = isCurrentPlayerAlive(gameState);\n\n    if (isAlive && !isButtonDisabled) {\n      switch (ability.type) {\n        case \"damage\":\n          if (player.pv > 0) {\n            hitMonster(ability.damage);\n          }\n          hitPlayer(ability.damage);\n          break;\n        case \"heal\":\n          healPlayer(ability.heal);\n          break;\n        case \"fireBall\":\n          castFireBall(ability.damage, ability.manaCost);\n          break;\n        case \"mana\":\n          manaPlayer();\n          break;\n        case \"playerIsAlive\":\n          // Notez que je n'ai pas ajouté de fonction pour \"playerIsAlive\" car cela ne semble pas nécessaire ici\n          break;\n        case \"nextTurn\":\n          nextTurn();\n          break;\n        default:\n          break;\n      }\n\n      setIsButtonDisabled(true);\n\n      // Réactivez le bouton après un délai de 2000 millisecondes (2 secondes)\n      setTimeout(() => {\n        setIsButtonDisabled(false);\n      }, 2000);\n    }\n  };\n\n  const getButtonClassName = () => {\n    switch (ability.type) {\n      case \"heal\":\n        return \"btn btn-danger m-1 btn-heal\";\n      case \"damage\":\n        return \"btn btn-success m-1 btn-attack\";\n      case \"fireBall\":\n        return \"btn btn-warning m-1 btn-fireball\";\n      case \"mana\":\n        return \"btn btn-info m-1 btn-mana\";\n      default:\n        return \"btn btn-secondary m-1\";\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handleCapacity}\n      className={getButtonClassName()}\n      disabled={!isAlive}\n    >\n      {ability.name}{\" \"}\n      <i className={ability.type === \"heal\" ? \"fas fa-heart\" : \"fas fa-bomb\"}></i>{\" \"}\n      {ability.type === \"heal\" ? `+${ability.heal}` : ability.damage}{\" \"}\n      <i className=\"fas fa-fire-alt\"></i> - {ability.manaCost} Mana\n    </button>\n  );\n};\n\nexport default ButtonCapacity;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}