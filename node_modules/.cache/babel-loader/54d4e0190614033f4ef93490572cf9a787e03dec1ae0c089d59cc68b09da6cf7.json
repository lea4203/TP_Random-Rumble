{"ast":null,"code":"const initialState = {\n  players: [{\n    name: \"John\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 1,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: 30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jack\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 2,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: 30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jessy\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 3,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: 30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jenny\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 4,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }],\n  monster: {\n    pv: 800,\n    pvMax: 800\n  },\n  turn: 1,\n  currentTurnPlayer: 1 // supposez que le premier joueur commence\n};\nfunction rootReducer(state = initialState, action) {\n  const currentPlayerId = state.currentTurnPlayer;\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const {\n        monsterDamage\n      } = action.payload;\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: Math.max(state.monster.pv - monsterDamage, 0)\n        }\n      };\n\n    //...\n    case \"HIT_PLAYER\":\n      const {\n        damage,\n        playerId\n      } = action.payload; // ajustez la déstructuration\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === playerId) {\n            return {\n              ...player,\n              pv: Math.max(player.pv - damage, 0)\n            };\n          }\n          return player;\n        })\n      };\n    //...\n\n    case \"HEAL_PLAYER\":\n      const {\n        healPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax)\n            };\n          }\n          return player;\n        })\n      };\n    case \"FIRE_BALL\":\n      const currentPlayer = state.players.find(player => player.id === currentPlayerId);\n      if (currentPlayer && !currentPlayer.hasPerformedAction) {\n        const {\n          fireBall\n        } = action.payload;\n        const updatedPlayers = state.players.map(player => player.id === fireBall.id ? {\n          ...player,\n          pv: Math.max(player.pv - fireBall.damage, 0),\n          mana: Math.max(player.mana - fireBall.manaCost, 0),\n          hasPerformedAction: true\n        } : player);\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0)\n          }\n        };\n      }\n      return state;\n    case \"MANA_PLAYER\":\n      const {\n        manaPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax)\n            };\n          }\n          return player;\n        })\n      };\n    case \"NEXT_TURN\":\n      const nextPlayerId = state.currentTurnPlayer % state.players.length + 1;\n      return {\n        ...state,\n        turn: state.turn + 1,\n        currentTurnPlayer: nextPlayerId\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","players","name","pv","pvMax","mana","manaMax","id","abilities","damage","manaCost","type","heal","monster","turn","currentTurnPlayer","rootReducer","state","action","currentPlayerId","monsterDamage","payload","Math","max","playerId","map","player","healPlayer","min","currentPlayer","find","hasPerformedAction","fireBall","updatedPlayers","manaPlayer","nextPlayerId","length"],"sources":["/home/g404/Documents/Random-Rumblee/src/store/rootReducer.js"],"sourcesContent":["const initialState = {\n  players: [\n    {\n      name: \"John\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 1,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: 30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jack\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 2,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: 30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jessy\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 3,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: 30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jenny\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 4,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: +30,\n          manaCost: 30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n  ],\n\n  monster: {\n    pv: 800,\n    pvMax: 800,\n  },\n  turn: 1,\n  currentTurnPlayer: 1, // supposez que le premier joueur commence\n};\n\nfunction rootReducer(state = initialState, action) {\n  const currentPlayerId = state.currentTurnPlayer;\n\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const { monsterDamage } = action.payload;\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: Math.max(state.monster.pv - monsterDamage, 0),\n        },\n      };\n\n    //...\n    case \"HIT_PLAYER\":\n      const { damage, playerId } = action.payload; // ajustez la déstructuration\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === playerId) {\n            return {\n              ...player,\n              pv: Math.max(player.pv - damage, 0),\n            };\n          }\n          return player;\n        }),\n      };\n    //...\n\n\n    case \"HEAL_PLAYER\":\n      const { healPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax),\n            };\n          }\n          return player;\n        }),\n      };\n\n    case \"FIRE_BALL\":\n      const currentPlayer = state.players.find(player => player.id === currentPlayerId);\n\n      if (currentPlayer && !currentPlayer.hasPerformedAction) {\n        const { fireBall } = action.payload;\n        const updatedPlayers = state.players.map(player =>\n          player.id === fireBall.id\n            ? {\n              ...player,\n              pv: Math.max(player.pv - fireBall.damage, 0),\n              mana: Math.max(player.mana - fireBall.manaCost, 0),\n              hasPerformedAction: true,\n            }\n            : player\n        );\n\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0),\n          },\n        };\n      }\n      return state;\n\n    case \"MANA_PLAYER\":\n      const { manaPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax),\n            };\n          }\n          return player;\n        }),\n      };\n\n      case \"NEXT_TURN\":\n        const nextPlayerId = (state.currentTurnPlayer % state.players.length) + 1;\n        return {\n          ...state,\n          turn: state.turn + 1,\n          currentTurnPlayer: nextPlayerId,\n        };\n\n\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}