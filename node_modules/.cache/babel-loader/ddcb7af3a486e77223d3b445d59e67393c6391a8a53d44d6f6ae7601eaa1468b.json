{"ast":null,"code":"const initialState = {\n  players: [{\n    name: \"John\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 1,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: -30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jack\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 2,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: -30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jessy\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 3,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: -30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jenny\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 4,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: -30,\n      // Utilisez un nombre négatif pour déduire le coût de mana\n      type: \"mana\"\n    }]\n  }],\n  monster: {\n    pv: 800,\n    pvMax: 800\n  },\n  currentTurnPlayer: 1\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const {\n        monsterDamage\n      } = action.payload; // Renommez la variable\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: Math.max(state.monster.pv - monsterDamage, 0)\n        }\n      };\n    case \"HIT_PLAYER\":\n      const {\n        damage,\n        playerId\n      } = action.payload;\n      const updatedPlayers = state.players.map(player => player.id === playerId ? {\n        ...player,\n        pv: Math.max(Math.min(player.pv - damage, player.pvMax), 0),\n        // Limitez les pv entre 0 et pvMax\n        mana: Math.max(player.mana - player.abilities.find(a => a.type === 'damage').manaCost, 0) // Déduisez les coûts de mana\n      } : player);\n      return {\n        ...state,\n        players: updatedPlayers\n      };\n    case \"HEAL_PLAYER\":\n      const {\n        healPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax) // Limitez les pv à pvMax\n            };\n          }\n          return player;\n        })\n      };\n    case \"FIRE_BALL\":\n      if (player.id === currentPlayerId && !player.hasPerformedAction) {\n        const {\n          fireBall\n        } = action.payload;\n        const updatedPlayers = state.players.map(player => player.id === fireBall.id ? {\n          ...player,\n          pv: Math.max(player.pv - fireBall.damage, 0),\n          mana: Math.max(player.mana - fireBall.manaCost, 0),\n          hasPerformedAction: true\n        } : player);\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0)\n          }\n        };\n      }\n      return state;\n    case \"MANA_PLAYER\":\n      const {\n        manaPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax) // Limitez les pv à pvMax\n            };\n          }\n          return player;\n        })\n      };\n    case \"NEXT_TURN\":\n      const currentPlayerId = state.currentTurnPlayer;\n      const nextTurnPlayerId = currentPlayerId % state.players.length + 1;\n      const resetPlayers = state.players.map(player => ({\n        ...player,\n        hasPerformedAction: false\n      }));\n      return {\n        ...state,\n        players: resetPlayers,\n        currentTurnPlayer: nextTurnPlayerId\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","players","name","pv","pvMax","mana","manaMax","id","abilities","damage","manaCost","type","heal","monster","currentTurnPlayer","rootReducer","state","action","monsterDamage","payload","Math","max","playerId","updatedPlayers","map","player","min","find","a","healPlayer","currentPlayerId","hasPerformedAction","fireBall","manaPlayer","nextTurnPlayerId","length","resetPlayers"],"sources":["/home/g404/Documents/Random-Rumblee/src/store/rootReducer.js"],"sourcesContent":["const initialState = {\n  players: [\n    {\n      name: \"John\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 1,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: -30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jack\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 2,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: -30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jessy\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 3,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: -30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n    {\n      name: \"Jenny\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 4,\n      abilities: [\n        {\n          name:\n            \"Frapper\",\n          damage: 10,\n          manaCost: 15,\n          type: \"damage\"\n        },\n        {\n          name: \"Guérir\",\n          heal: +10,\n          manaCost: 10,\n          type: \"heal\"\n        },\n        {\n          name: \"Lancer Attaque Special\",\n          damage: 15,\n          manaCost: 30,\n          type: \"fireBall\"\n        },\n        {\n          name: \"Recuperation Mana\",\n          mana: 30,\n          manaCost: -30, // Utilisez un nombre négatif pour déduire le coût de mana\n          type: \"mana\"\n        }\n\n      ],\n    },\n  ],\n\n  monster: {\n    pv: 800,\n    pvMax: 800,\n  },\n  currentTurnPlayer: 1,\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const { monsterDamage } = action.payload; // Renommez la variable\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: Math.max(state.monster.pv - monsterDamage, 0),\n        },\n      };\n\n\n\n\n    case \"HIT_PLAYER\":\n      const { damage, playerId } = action.payload;\n      const updatedPlayers = state.players.map((player) =>\n        player.id === playerId\n          ? {\n            ...player,\n            pv: Math.max(Math.min(player.pv - damage, player.pvMax), 0), // Limitez les pv entre 0 et pvMax\n            mana: Math.max(player.mana - player.abilities.find(a => a.type === 'damage').manaCost, 0), // Déduisez les coûts de mana\n          }\n          : player\n      );\n\n      return {\n        ...state,\n        players: updatedPlayers,\n      };\n\n\n    case \"HEAL_PLAYER\":\n      const { healPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax), // Limitez les pv à pvMax\n            };\n          }\n          return player;\n        }),\n      };\n\n    case \"FIRE_BALL\":\n      if (player.id === currentPlayerId && !player.hasPerformedAction) {\n        const { fireBall } = action.payload;\n        const updatedPlayers = state.players.map(player =>\n          player.id === fireBall.id\n            ? {\n              ...player,\n              pv: Math.max(player.pv - fireBall.damage, 0),\n              mana: Math.max(player.mana - fireBall.manaCost, 0),\n              hasPerformedAction: true,\n            }\n            : player\n        );\n\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0),\n          },\n        };\n      }\n      return state;\n\n    case \"MANA_PLAYER\":\n      const { manaPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax), // Limitez les pv à pvMax\n            };\n          }\n          return player;\n        }),\n      };\n\n    case \"NEXT_TURN\":\n      const currentPlayerId = state.currentTurnPlayer;\n      const nextTurnPlayerId = (currentPlayerId % state.players.length) + 1;\n\n      const resetPlayers = state.players.map((player) => ({\n        ...player,\n        hasPerformedAction: false,\n      }));\n\n      return {\n        ...state,\n        players: resetPlayers,\n        currentTurnPlayer: nextTurnPlayerId,\n      };\n\n\n\n\n\n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}