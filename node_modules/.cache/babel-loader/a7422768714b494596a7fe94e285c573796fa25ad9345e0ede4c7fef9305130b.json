{"ast":null,"code":"var _jsxFileName = \"/home/g404/Documents/Random-Rumblee/src/Components/Monster.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport ProgressBar from \"./ProgressBar\";\nimport { useSelector } from \"react-redux\";\nimport \"./Game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Monster = () => {\n  _s();\n  const monster = useSelector(state => state.monster);\n  console.log(monster);\n\n  // Fonction pour sélectionner l'image en fonction de l'état du monstre\n  const getMonsterImage = () => {\n    // Ajoutez ici la logique pour choisir l'image en fonction de l'état du monstre\n    // Par exemple, utilisez une condition sur les propriétés du monstre\n    if (monster.pv > monster.pvMax / 2) {\n      return \"URL_IMAGE_MONSTRE_SAIN\";\n    } else {\n      return \"URL_IMAGE_MONSTRE_BLESSE\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-sm-2 offset-sm-3\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"img-fluid\",\n            src: getMonsterImage(),\n            alt: \"monster\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n          pv: monster.pv,\n          pvMax: monster.pvMax,\n          bgType: \"bg-danger\",\n          faType: \"fa-heart\",\n          barName: \" : pv\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Monster, \"5EnG6aT+SgQRllPIx91QJ1bFkIM=\", false, function () {\n  return [useSelector];\n});\n_c = Monster;\nexport default Monster;\nvar _c;\n$RefreshReg$(_c, \"Monster\");","map":{"version":3,"names":["React","ProgressBar","useSelector","jsxDEV","_jsxDEV","Monster","_s","monster","state","console","log","getMonsterImage","pv","pvMax","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","bgType","faType","barName","_c","$RefreshReg$"],"sources":["/home/g404/Documents/Random-Rumblee/src/Components/Monster.js"],"sourcesContent":["import React from \"react\";\nimport ProgressBar from \"./ProgressBar\";\nimport { useSelector } from \"react-redux\";\nimport \"./Game.css\";\n\nconst Monster = () => {\n  const monster = useSelector((state) => state.monster);\n  console.log(monster);\n\n  // Fonction pour sélectionner l'image en fonction de l'état du monstre\n  const getMonsterImage = () => {\n    // Ajoutez ici la logique pour choisir l'image en fonction de l'état du monstre\n    // Par exemple, utilisez une condition sur les propriétés du monstre\n    if (monster.pv > monster.pvMax / 2) {\n      return \"URL_IMAGE_MONSTRE_SAIN\";\n    } else {\n      return \"URL_IMAGE_MONSTRE_BLESSE\";\n    }\n  };\n\n  return (\n    <section>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-2 offset-sm-3\">\n            {/* Utilisez la fonction getMonsterImage pour obtenir l'URL de l'image */}\n            <img\n              className=\"img-fluid\"\n              src={getMonsterImage()}\n              alt=\"monster\"\n            />\n          </div>\n\n          <ProgressBar\n            pv={monster.pv}\n            pvMax={monster.pvMax}\n            bgType=\"bg-danger\"\n            faType=\"fa-heart\"\n            barName=\" : pv\"\n          />\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Monster;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAMC,OAAO,GAAGL,WAAW,CAAEM,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EACrDE,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;;EAEpB;EACA,MAAMI,eAAe,GAAGA,CAAA,KAAM;IAC5B;IACA;IACA,IAAIJ,OAAO,CAACK,EAAE,GAAGL,OAAO,CAACM,KAAK,GAAG,CAAC,EAAE;MAClC,OAAO,wBAAwB;IACjC,CAAC,MAAM;MACL,OAAO,0BAA0B;IACnC;EACF,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,eACEV,OAAA;MAAKW,SAAS,EAAC,WAAW;MAAAD,QAAA,eACxBV,OAAA;QAAKW,SAAS,EAAC,KAAK;QAAAD,QAAA,gBAClBV,OAAA;UAAKW,SAAS,EAAC,sBAAsB;UAAAD,QAAA,eAEnCV,OAAA;YACEW,SAAS,EAAC,WAAW;YACrBC,GAAG,EAAEL,eAAe,CAAC,CAAE;YACvBM,GAAG,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACd;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eAENjB,OAAA,CAACH,WAAW;UACVW,EAAE,EAAEL,OAAO,CAACK,EAAG;UACfC,KAAK,EAAEN,OAAO,CAACM,KAAM;UACrBS,MAAM,EAAC,WAAW;UAClBC,MAAM,EAAC,UAAU;UACjBC,OAAO,EAAC;QAAO;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEd,CAAC;AAACf,EAAA,CAvCID,OAAO;EAAA,QACKH,WAAW;AAAA;AAAAuB,EAAA,GADvBpB,OAAO;AAyCb,eAAeA,OAAO;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}