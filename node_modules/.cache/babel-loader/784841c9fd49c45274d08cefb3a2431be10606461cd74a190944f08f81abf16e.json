{"ast":null,"code":"const initialState = {\n  players: [{\n    name: \"John\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 1,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: +30,\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jack\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 2,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jessy\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 3,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jenny\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 4,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }],\n  monster: {\n    pv: 800,\n    pvMax: 800\n  },\n  currentTurnPlayer: 1\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      const activePlayerIndex = state.currentTurnPlayer - 1;\n      const activePlayer = state.players[activePlayerIndex];\n      if (!activePlayer.hasPerformedAction) {\n        // Le joueur n'a pas encore effectué d'action\n        const updatedPlayers = state.players.map((player, index) => ({\n          ...player,\n          hasPerformedAction: index === activePlayerIndex\n        }));\n        return {\n          ...state,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - action.payload, 0)\n          },\n          players: updatedPlayers\n        };\n      }\n      return state;\n    case \"HIT_PLAYER\":\n      const {\n        damage,\n        playerId\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => player.id === playerId ? {\n          ...player,\n          pv: Math.max(Math.min(player.pv - damage, player.pvMax), 0) // Limitez les pv entre 0 et pvMax\n        } : player)\n      };\n    case \"HEAL_PLAYER\":\n      const {\n        healPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax) // Limitez les pv à pvMax\n            };\n          }\n          return player;\n        })\n      };\n    case \"FIRE_BALL\":\n      const currentPlayer = state.players[state.currentTurnPlayer - 1];\n      if (!currentPlayer.hasPerformedAction && !currentPlayer.abilities.find(ability => ability.hasUsedAbility && ability.type === \"fireBall\")) {\n        const {\n          fireBall\n        } = action.payload;\n        const updatedPlayers = state.players.map(player => player.id === fireBall.id ? {\n          ...player,\n          pv: Math.max(player.pv - fireBall.damage, 0),\n          mana: Math.max(player.mana - fireBall.manaCost, 0),\n          hasPerformedAction: true,\n          abilities: player.abilities.map(ability => ability.type === \"fireBall\" ? {\n            ...ability,\n            hasUsedAbility: true\n          } : ability)\n        } : player);\n        return {\n          ...state,\n          players: updatedPlayers,\n          monster: {\n            ...state.monster,\n            pv: Math.max(state.monster.pv - fireBall.damage, 0)\n          }\n        };\n      }\n      return state;\n    case \"MANA_PLAYER\":\n      const {\n        manaPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax) // Limitez la mana à manaMax\n            };\n          }\n          return player;\n        })\n      };\n    case \"NEXT_TURN\":\n      const currentPlayerId = state.currentTurnPlayer;\n      const nextTurnPlayerId = currentPlayerId % state.players.length + 1;\n      const allPlayersPlayed = state.players.every(player => player.hasPerformedAction);\n      if (allPlayersPlayed) {\n        const resetPlayers = state.players.map(player => ({\n          ...player,\n          hasPerformedAction: false,\n          abilities: player.abilities.map(ability => ({\n            ...ability,\n            hasUsedAbility: false\n          }))\n        }));\n        return {\n          ...state,\n          players: resetPlayers,\n          currentTurnPlayer: nextTurnPlayerId\n        };\n      } else {\n        const updatedPlayers = state.players.map(player => player.id === currentPlayerId ? {\n          ...player,\n          hasPerformedAction: true\n        } : player);\n        return {\n          ...state,\n          players: updatedPlayers\n        };\n      }\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","players","name","pv","pvMax","mana","manaMax","id","abilities","damage","manaCost","type","heal","monster","currentTurnPlayer","rootReducer","state","action","activePlayerIndex","activePlayer","hasPerformedAction","updatedPlayers","map","player","index","Math","max","payload","playerId","min","healPlayer","currentPlayer","find","ability","hasUsedAbility","fireBall","manaPlayer","currentPlayerId","nextTurnPlayerId","length","allPlayersPlayed","every","resetPlayers"],"sources":["/home/g404/Documents/random-rumble/src/store/rootReducer.js"],"sourcesContent":["const initialState = {\n  players: [\n    {\n      name: \"John\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 1,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: 30, manaCost: +30, type: \"mana\" }\n      ],\n    },\n    {\n      name: \"Jack\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 2,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n      ],\n    },\n    {\n      name: \"Jessy\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 3,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n\n      ],\n    },\n    {\n      name: \"Jenny\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 4,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n\n      ],\n    },\n  ],\n\n  monster: {\n    pv: 800,\n    pvMax: 800,\n  },\n  currentTurnPlayer: 1,\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n  const activePlayerIndex = state.currentTurnPlayer - 1;\n  const activePlayer = state.players[activePlayerIndex];\n\n  if (!activePlayer.hasPerformedAction) {\n    // Le joueur n'a pas encore effectué d'action\n    const updatedPlayers = state.players.map((player, index) => ({\n      ...player,\n      hasPerformedAction: index === activePlayerIndex,\n    }));\n\n    return {\n      ...state,\n      monster: {\n        ...state.monster,\n        pv: Math.max(state.monster.pv - action.payload, 0),\n      },\n      players: updatedPlayers,\n    };\n  }\n  return state;\n\n    \n    \n\n    case \"HIT_PLAYER\":\n      const { damage, playerId } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) =>\n          player.id === playerId\n            ? {\n              ...player,\n              pv: Math.max(Math.min(player.pv - damage, player.pvMax), 0), // Limitez les pv entre 0 et pvMax\n            }\n            : player\n        ),\n      };\n\n    case \"HEAL_PLAYER\":\n      const { healPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: Math.min(player.pv + healPlayer.heal, player.pvMax), // Limitez les pv à pvMax\n            };\n          }\n          return player;\n        }),\n      };\n\n  \n      case \"FIRE_BALL\":\n        const currentPlayer = state.players[state.currentTurnPlayer - 1];\n  \n        if (!currentPlayer.hasPerformedAction && !currentPlayer.abilities.find(ability => ability.hasUsedAbility && ability.type === \"fireBall\")) {\n          const { fireBall } = action.payload;\n          const updatedPlayers = state.players.map(player =>\n            player.id === fireBall.id\n              ? {\n                  ...player,\n                  pv: Math.max(player.pv - fireBall.damage, 0),\n                  mana: Math.max(player.mana - fireBall.manaCost, 0),\n                  hasPerformedAction: true,\n                  abilities: player.abilities.map(ability =>\n                    ability.type === \"fireBall\" ? { ...ability, hasUsedAbility: true } : ability\n                  ),\n                }\n              : player\n          );\n  \n          return {\n            ...state,\n            players: updatedPlayers,\n            monster: {\n              ...state.monster,\n              pv: Math.max(state.monster.pv - fireBall.damage, 0),\n            },\n          };\n        }\n        return state;\n\n    case \"MANA_PLAYER\":\n      const { manaPlayer } = action.payload;\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === manaPlayer.id) {\n            return {\n              ...player,\n              mana: Math.min(player.mana + manaPlayer.mana, player.manaMax), // Limitez la mana à manaMax\n            };\n          }\n          return player;\n        }),\n      };\n\n      case \"NEXT_TURN\":\n        const currentPlayerId = state.currentTurnPlayer;\n        const nextTurnPlayerId = currentPlayerId % state.players.length + 1;\n  \n        const allPlayersPlayed = state.players.every(player => player.hasPerformedAction);\n  \n        if (allPlayersPlayed) {\n          const resetPlayers = state.players.map(player => ({\n            ...player,\n            hasPerformedAction: false,\n            abilities: player.abilities.map(ability => ({\n              ...ability,\n              hasUsedAbility: false,\n            })),\n          }));\n  \n          return {\n            ...state,\n            players: resetPlayers,\n            currentTurnPlayer: nextTurnPlayerId,\n          };\n        } else {\n          const updatedPlayers = state.players.map(player =>\n            player.id === currentPlayerId ? { ...player, hasPerformedAction: true } : player\n          );\n  \n          return {\n            ...state,\n            players: updatedPlayers,\n          };\n        }\n  \n      default:\n        return state;\n    }\n  }\n      \n\n\n\n\n\nexport default rootReducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}