{"ast":null,"code":"var _jsxFileName = \"/home/g404/Documents/rumble-boilerplate/src/Components/ButtonCapacity.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonCapacity = ({\n  player,\n  ability\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const hitMonster = () => {\n    dispatch({\n      type: \"HIT_MONSTER\",\n      payload: ability.amount\n    });\n  };\n  const hitPlayer = () => {\n    dispatch({\n      type: \"HIT_PLAYER\",\n      payload: {\n        damage: ability.amount,\n        playerId: player.id\n      }\n    });\n  };\n  const healPlayer = () => {\n    dispatch({\n      type: \"HEAL_PLAYER\",\n      payload: {\n        healPlayer: {\n          heal: ability.amount,\n          id: player.id\n        }\n      }\n    });\n  };\n  const handleAbility = () => {\n    switch (ability.type) {\n      case \"damage\":\n        hitPlayer();\n        break;\n      case \"heal\":\n        healPlayer();\n        break;\n      case \"hitMonster\":\n        hitMonster();\n        break;\n      // Vous pouvez ajouter d'autres types de capacité ici si nécessaire\n      default:\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: handleAbility,\n    className: \"btn btn-success m-1\",\n    children: [ability.label, \" \", ability.amount, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonCapacity, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ButtonCapacity;\nexport default ButtonCapacity;\nvar _c;\n$RefreshReg$(_c, \"ButtonCapacity\");","map":{"version":3,"names":["React","useDispatch","jsxDEV","_jsxDEV","ButtonCapacity","player","ability","_s","dispatch","hitMonster","type","payload","amount","hitPlayer","damage","playerId","id","healPlayer","heal","handleAbility","onClick","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/g404/Documents/rumble-boilerplate/src/Components/ButtonCapacity.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst ButtonCapacity = ({ player, ability }) => {\n  const dispatch = useDispatch();\n\n  const hitMonster = () => {\n    dispatch({ type: \"HIT_MONSTER\", payload: ability.amount });\n  };\n\n  const hitPlayer = () => {\n    dispatch({ type: \"HIT_PLAYER\", payload: { damage: ability.amount, playerId: player.id } });\n  };\n\n  const healPlayer = () => {\n    dispatch({ type: \"HEAL_PLAYER\", payload: { healPlayer: { heal: ability.amount, id: player.id } } });\n  };\n\n  const handleAbility = () => {\n    switch (ability.type) {\n      case \"damage\":\n        hitPlayer();\n        break;\n      case \"heal\":\n        healPlayer();\n        break;\n      case \"hitMonster\":\n        hitMonster();\n        break;\n      // Vous pouvez ajouter d'autres types de capacité ici si nécessaire\n      default:\n        break;\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handleAbility}  \n      className=\"btn btn-success m-1\"\n    >\n      {ability.label} {ability.amount} {/* Utilisez la propriété label et amount ou d'autres propriétés de votre objet ability */}\n    </button>\n  );\n};\n\nexport default ButtonCapacity;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBD,QAAQ,CAAC;MAAEE,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAEL,OAAO,CAACM;IAAO,CAAC,CAAC;EAC5D,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtBL,QAAQ,CAAC;MAAEE,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAE;QAAEG,MAAM,EAAER,OAAO,CAACM,MAAM;QAAEG,QAAQ,EAAEV,MAAM,CAACW;MAAG;IAAE,CAAC,CAAC;EAC5F,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBT,QAAQ,CAAC;MAAEE,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAE;QAAEM,UAAU,EAAE;UAAEC,IAAI,EAAEZ,OAAO,CAACM,MAAM;UAAEI,EAAE,EAAEX,MAAM,CAACW;QAAG;MAAE;IAAE,CAAC,CAAC;EACrG,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B,QAAQb,OAAO,CAACI,IAAI;MAClB,KAAK,QAAQ;QACXG,SAAS,CAAC,CAAC;QACX;MACF,KAAK,MAAM;QACTI,UAAU,CAAC,CAAC;QACZ;MACF,KAAK,YAAY;QACfR,UAAU,CAAC,CAAC;QACZ;MACF;MACA;QACE;IACJ;EACF,CAAC;EAED,oBACEN,OAAA;IACEO,IAAI,EAAC,QAAQ;IACbU,OAAO,EAAED,aAAc;IACvBE,SAAS,EAAC,qBAAqB;IAAAC,QAAA,GAE9BhB,OAAO,CAACiB,KAAK,EAAC,GAAC,EAACjB,OAAO,CAACM,MAAM,EAAC,GAAC;EAAA;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEb,CAAC;AAACpB,EAAA,CAzCIH,cAAc;EAAA,QACDH,WAAW;AAAA;AAAA2B,EAAA,GADxBxB,cAAc;AA2CpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}