{"ast":null,"code":"var _jsxFileName = \"/home/g404/Documents/Random-Rumblee/src/Components/ButtonCapacity.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonCapacity = ({\n  player,\n  ability\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const hitMonster = damage => {\n    dispatch({\n      type: \"HIT_MONSTER\",\n      payload: {\n        monsterDamage: damage\n      }\n    });\n  };\n  const hitPlayer = damage => {\n    dispatch({\n      type: \"HIT_PLAYER\",\n      payload: {\n        damage,\n        playerId: player.id\n      }\n    });\n  };\n  const healPlayer = heal => {\n    dispatch({\n      type: \"HEAL_PLAYER\",\n      payload: {\n        healPlayer: {\n          heal,\n          id: player.id,\n          manaCost: ability.manaCost,\n          maxHealth: 100\n        }\n      }\n    });\n  };\n  const castFireBall = (damage, manaCost) => {\n    dispatch({\n      type: \"FIRE_BALL\",\n      payload: {\n        fireBall: {\n          damage,\n          id: player.id,\n          manaCost\n        }\n      }\n    });\n  };\n  const manaPlayer = (mana, manaCost) => {\n    dispatch({\n      type: \"MANA_PLAYER\",\n      payload: {\n        manaPlayer: {\n          mana,\n          id: player.id,\n          manaCost\n        }\n      }\n    });\n  };\n  const nextTurn = () => {\n    dispatch({\n      type: \"NEXT_TURN\"\n    });\n  };\n  const handleCapacity = () => {\n    switch (ability.type) {\n      case \"damage\":\n        if (player.pv > 0) {\n          hitMonster(ability.damage);\n        }\n        hitPlayer(ability.damage);\n        break;\n      case \"heal\":\n        healPlayer(ability.heal);\n        break;\n      case \"fireBall\":\n        const updatedManaCostFireBall = Math.min(ability.manaCost, player.mana);\n        if (player.mana >= updatedManaCostFireBall) {\n          castFireBall(ability.damage, updatedManaCostFireBall);\n          manaPlayer(ability.mana, updatedManaCostFireBall);\n        } else {\n          console.log(\"Not enough mana to cast the fireball.\");\n        }\n        break;\n      case \"mana\":\n        manaPlayer(ability.mana, ability.manaCost);\n        break;\n      case \"nextTurn\":\n        nextTurn();\n        break;\n      default:\n        break;\n    }\n  };\n  const getButtonClassName = () => {\n    switch (ability.type) {\n      case \"heal\":\n        return \"btn btn-danger m-1 btn-heal\";\n      case \"damage\":\n        return \"btn btn-success m-1 btn-attack\";\n      case \"fireBall\":\n        return \"btn btn-warning m-1 btn-fireball\";\n      case \"mana\":\n        return \"btn btn-info m-1 btn-mana\";\n      default:\n        return \"btn btn-secondary m-1\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: handleCapacity,\n    className: getButtonClassName(),\n    disabled: false,\n    children: [ability.name, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n      className: ability.type === \"heal\" ? \"fas fa-heart\" : \"fas fa-bomb\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), \" \", ability.type === \"heal\" ? `+${ability.heal}` : ability.damage, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"fas fa-fire-alt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), \" - \", ability.manaCost, \" Mana\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonCapacity, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = ButtonCapacity;\nexport default ButtonCapacity;\nvar _c;\n$RefreshReg$(_c, \"ButtonCapacity\");","map":{"version":3,"names":["React","useDispatch","jsxDEV","_jsxDEV","ButtonCapacity","player","ability","_s","dispatch","hitMonster","damage","type","payload","monsterDamage","hitPlayer","playerId","id","healPlayer","heal","manaCost","maxHealth","castFireBall","fireBall","manaPlayer","mana","nextTurn","handleCapacity","pv","updatedManaCostFireBall","Math","min","console","log","getButtonClassName","onClick","className","disabled","children","name","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/g404/Documents/Random-Rumblee/src/Components/ButtonCapacity.js"],"sourcesContent":["import React from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nconst ButtonCapacity = ({ player, ability }) => {\n  const dispatch = useDispatch();\n\n  const hitMonster = (damage) => {\n    dispatch({ type: \"HIT_MONSTER\", payload: { monsterDamage: damage } });\n  };\n\n  const hitPlayer = (damage) => {\n    dispatch({ type: \"HIT_PLAYER\", payload: { damage, playerId: player.id } });\n  };\n\n  const healPlayer = (heal) => {\n    dispatch({\n      type: \"HEAL_PLAYER\",\n      payload: { healPlayer: { heal, id: player.id, manaCost: ability.manaCost, maxHealth: 100 } },\n    });\n  };\n\n  const castFireBall = (damage, manaCost) => {\n    dispatch({\n      type: \"FIRE_BALL\",\n      payload: { fireBall: { damage, id: player.id, manaCost } },\n    });\n  };\n\n  const manaPlayer = (mana, manaCost) => {\n    dispatch({\n      type: \"MANA_PLAYER\",\n      payload: { manaPlayer: { mana, id: player.id, manaCost } },\n    });\n  };\n\n  const nextTurn = () => {\n    dispatch({ type: \"NEXT_TURN\" });\n  };\n\n  const handleCapacity = () => {\n    switch (ability.type) {\n      case \"damage\":\n        if (player.pv > 0) {\n          hitMonster(ability.damage);\n        }\n        hitPlayer(ability.damage);\n        break;\n      case \"heal\":\n        healPlayer(ability.heal);\n        break;\n      case \"fireBall\":\n        const updatedManaCostFireBall = Math.min(ability.manaCost, player.mana);\n        if (player.mana >= updatedManaCostFireBall) {\n          castFireBall(ability.damage, updatedManaCostFireBall);\n          manaPlayer(ability.mana, updatedManaCostFireBall);\n        } else {\n          console.log(\"Not enough mana to cast the fireball.\");\n        }\n        break;\n      case \"mana\":\n        manaPlayer(ability.mana, ability.manaCost);\n        break;\n      case \"nextTurn\":\n        nextTurn();\n        break;\n      default:\n        break;\n    }\n  };\n\n  const getButtonClassName = () => {\n    switch (ability.type) {\n      case \"heal\":\n        return \"btn btn-danger m-1 btn-heal\";\n      case \"damage\":\n        return \"btn btn-success m-1 btn-attack\";\n      case \"fireBall\":\n        return \"btn btn-warning m-1 btn-fireball\";\n      case \"mana\":\n        return \"btn btn-info m-1 btn-mana\";\n      default:\n        return \"btn btn-secondary m-1\";\n    }\n  };\n\n  return (\n    <button\n      type=\"button\"\n      onClick={handleCapacity}\n      className={getButtonClassName()}\n      disabled={false}\n    >\n      {ability.name}{\" \"}\n      <i className={ability.type === \"heal\" ? \"fas fa-heart\" : \"fas fa-bomb\"}></i>{\" \"}\n      {ability.type === \"heal\" ? `+${ability.heal}` : ability.damage}{\" \"}\n      <i className=\"fas fa-fire-alt\"></i> - {ability.manaCost} Mana\n    </button>\n  );\n};\n\nexport default ButtonCapacity;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,MAAM;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,UAAU,GAAIC,MAAM,IAAK;IAC7BF,QAAQ,CAAC;MAAEG,IAAI,EAAE,aAAa;MAAEC,OAAO,EAAE;QAAEC,aAAa,EAAEH;MAAO;IAAE,CAAC,CAAC;EACvE,CAAC;EAED,MAAMI,SAAS,GAAIJ,MAAM,IAAK;IAC5BF,QAAQ,CAAC;MAAEG,IAAI,EAAE,YAAY;MAAEC,OAAO,EAAE;QAAEF,MAAM;QAAEK,QAAQ,EAAEV,MAAM,CAACW;MAAG;IAAE,CAAC,CAAC;EAC5E,CAAC;EAED,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3BV,QAAQ,CAAC;MACPG,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAE;QAAEK,UAAU,EAAE;UAAEC,IAAI;UAAEF,EAAE,EAAEX,MAAM,CAACW,EAAE;UAAEG,QAAQ,EAAEb,OAAO,CAACa,QAAQ;UAAEC,SAAS,EAAE;QAAI;MAAE;IAC7F,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAGA,CAACX,MAAM,EAAES,QAAQ,KAAK;IACzCX,QAAQ,CAAC;MACPG,IAAI,EAAE,WAAW;MACjBC,OAAO,EAAE;QAAEU,QAAQ,EAAE;UAAEZ,MAAM;UAAEM,EAAE,EAAEX,MAAM,CAACW,EAAE;UAAEG;QAAS;MAAE;IAC3D,CAAC,CAAC;EACJ,CAAC;EAED,MAAMI,UAAU,GAAGA,CAACC,IAAI,EAAEL,QAAQ,KAAK;IACrCX,QAAQ,CAAC;MACPG,IAAI,EAAE,aAAa;MACnBC,OAAO,EAAE;QAAEW,UAAU,EAAE;UAAEC,IAAI;UAAER,EAAE,EAAEX,MAAM,CAACW,EAAE;UAAEG;QAAS;MAAE;IAC3D,CAAC,CAAC;EACJ,CAAC;EAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;IACrBjB,QAAQ,CAAC;MAAEG,IAAI,EAAE;IAAY,CAAC,CAAC;EACjC,CAAC;EAED,MAAMe,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAQpB,OAAO,CAACK,IAAI;MAClB,KAAK,QAAQ;QACX,IAAIN,MAAM,CAACsB,EAAE,GAAG,CAAC,EAAE;UACjBlB,UAAU,CAACH,OAAO,CAACI,MAAM,CAAC;QAC5B;QACAI,SAAS,CAACR,OAAO,CAACI,MAAM,CAAC;QACzB;MACF,KAAK,MAAM;QACTO,UAAU,CAACX,OAAO,CAACY,IAAI,CAAC;QACxB;MACF,KAAK,UAAU;QACb,MAAMU,uBAAuB,GAAGC,IAAI,CAACC,GAAG,CAACxB,OAAO,CAACa,QAAQ,EAAEd,MAAM,CAACmB,IAAI,CAAC;QACvE,IAAInB,MAAM,CAACmB,IAAI,IAAII,uBAAuB,EAAE;UAC1CP,YAAY,CAACf,OAAO,CAACI,MAAM,EAAEkB,uBAAuB,CAAC;UACrDL,UAAU,CAACjB,OAAO,CAACkB,IAAI,EAAEI,uBAAuB,CAAC;QACnD,CAAC,MAAM;UACLG,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;QACtD;QACA;MACF,KAAK,MAAM;QACTT,UAAU,CAACjB,OAAO,CAACkB,IAAI,EAAElB,OAAO,CAACa,QAAQ,CAAC;QAC1C;MACF,KAAK,UAAU;QACbM,QAAQ,CAAC,CAAC;QACV;MACF;QACE;IACJ;EACF,CAAC;EAED,MAAMQ,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,QAAQ3B,OAAO,CAACK,IAAI;MAClB,KAAK,MAAM;QACT,OAAO,6BAA6B;MACtC,KAAK,QAAQ;QACX,OAAO,gCAAgC;MACzC,KAAK,UAAU;QACb,OAAO,kCAAkC;MAC3C,KAAK,MAAM;QACT,OAAO,2BAA2B;MACpC;QACE,OAAO,uBAAuB;IAClC;EACF,CAAC;EAED,oBACER,OAAA;IACEQ,IAAI,EAAC,QAAQ;IACbuB,OAAO,EAAER,cAAe;IACxBS,SAAS,EAAEF,kBAAkB,CAAC,CAAE;IAChCG,QAAQ,EAAE,KAAM;IAAAC,QAAA,GAEf/B,OAAO,CAACgC,IAAI,EAAE,GAAG,eAClBnC,OAAA;MAAGgC,SAAS,EAAE7B,OAAO,CAACK,IAAI,KAAK,MAAM,GAAG,cAAc,GAAG;IAAc;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAG,EAC/EpC,OAAO,CAACK,IAAI,KAAK,MAAM,GAAI,IAAGL,OAAO,CAACY,IAAK,EAAC,GAAGZ,OAAO,CAACI,MAAM,EAAE,GAAG,eACnEP,OAAA;MAAGgC,SAAS,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,OAAG,EAACpC,OAAO,CAACa,QAAQ,EAAC,OAC1D;EAAA;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACnC,EAAA,CA/FIH,cAAc;EAAA,QACDH,WAAW;AAAA;AAAA0C,EAAA,GADxBvC,cAAc;AAiGpB,eAAeA,cAAc;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}