{"ast":null,"code":"const initialState = {\n  players: [{\n    name: \"John\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 1,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: 30,\n      manaCost: +30,\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jack\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 2,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jessy\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 3,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }, {\n    name: \"Jenny\",\n    pv: 100,\n    pvMax: 100,\n    mana: 30,\n    manaMax: 30,\n    id: 4,\n    abilities: [{\n      name: \"Frapper\",\n      damage: 10,\n      manaCost: 15,\n      type: \"damage\"\n    }, {\n      name: \"Guérir\",\n      heal: +10,\n      manaCost: 10,\n      type: \"heal\"\n    }, {\n      name: \"Lancer Attaque Special\",\n      damage: 15,\n      manaCost: 30,\n      type: \"fireBall\"\n    }, {\n      name: \"Recuperation Mana\",\n      mana: +30,\n      manaCost: 30,\n      type: \"mana\"\n    }]\n  }],\n  monster: {\n    pv: 800,\n    pvMax: 800\n  }\n};\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: state.monster.pv - action.payload\n        }\n      };\n    case \"HIT_PLAYER\":\n      const {\n        damage,\n        playerId\n      } = action.payload;\n      const manaCost = 5; // Choisissez le coût de mana approprié\n\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === playerId) {\n            // Vérifiez si le joueur a suffisamment de mana avant de déduire le coût\n            const updatedMana = Math.max(player.mana - manaCost, 0);\n            return {\n              ...player,\n              pv: player.pv - damage,\n              mana: updatedMana\n            };\n          }\n          return player;\n        })\n      };\n    case \"HEAL_PLAYER\":\n      const {\n        healPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: player.pv + healPlayer.heal\n            };\n          }\n          return player;\n        })\n      };\n    case \"FIRE_BALL\":\n      const {\n        fireballDamage,\n        fireballManaCost,\n        fireballPlayerId\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === fireballPlayerId) {\n            // Vérifiez si le joueur a suffisamment de mana avant de lancer la boule de feu\n            if (player.mana >= fireballManaCost) {\n              return {\n                ...player,\n                pv: player.pv - fireballDamage,\n                monster: {\n                  ...state.monster,\n                  pv: state.monster.pv - fireballDamage\n                },\n                mana: player.mana - fireballManaCost // Réduire le mana\n              };\n            } else {\n              console.log(\"Mana insuffisant pour lancer la boule de feu.\");\n              return player;\n            }\n          }\n        })\n      };\n    case \"MANA_PLAYER\":\n      const {\n        manaPlayer\n      } = action.payload;\n      return {\n        ...state,\n        players: state.players.map(player => {\n          if (player.id === manaPlayer.id) {\n            const updatedMana = Math.min(player.mana + manaPlayer.manaCost, player.manaMax);\n            return {\n              ...player,\n              mana: updatedMana\n            };\n          }\n          return player;\n        })\n      };\n    default:\n      return state;\n  }\n}\nexport default rootReducer;","map":{"version":3,"names":["initialState","players","name","pv","pvMax","mana","manaMax","id","abilities","damage","manaCost","type","heal","monster","rootReducer","state","action","payload","playerId","map","player","updatedMana","Math","max","healPlayer","fireballDamage","fireballManaCost","fireballPlayerId","console","log","manaPlayer","min"],"sources":["/home/g404/Documents/rumble-boilerplate/src/store/rootReducer.js"],"sourcesContent":["const initialState = {\n  players: [\n    {\n      name: \"John\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 1,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: 30, manaCost: +30, type: \"mana\" }\n      ],\n    },\n    {\n      name: \"Jack\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 2,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n      ],\n    },\n    {\n      name: \"Jessy\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 3,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n\n      ],\n    },\n    {\n      name: \"Jenny\",\n      pv: 100,\n      pvMax: 100,\n      mana: 30,\n      manaMax: 30,\n      id: 4,\n      abilities: [\n        { name: \"Frapper\", damage: 10, manaCost: 15, type: \"damage\" },\n        { name: \"Guérir\", heal: +10, manaCost: 10, type: \"heal\" },\n        { name: \"Lancer Attaque Special\", damage: 15, manaCost: 30, type: \"fireBall\" },\n        { name: \"Recuperation Mana\", mana: +30, manaCost: 30, type: \"mana\" }\n\n      ],\n    },\n  ],\n\n  monster: {\n    pv: 800,\n    pvMax: 800,\n  },\n};\n\nfunction rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case \"HIT_MONSTER\":\n      return {\n        ...state,\n        monster: {\n          ...state.monster,\n          pv: state.monster.pv - action.payload,\n        },\n      };\n    case \"HIT_PLAYER\":\n      const { damage, playerId } = action.payload;\n      const manaCost = 5; // Choisissez le coût de mana approprié\n\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === playerId) {\n            // Vérifiez si le joueur a suffisamment de mana avant de déduire le coût\n            const updatedMana = Math.max(player.mana - manaCost, 0);\n            return {\n              ...player,\n              pv: player.pv - damage,\n              mana: updatedMana,\n            };\n          }\n          return player;\n        }),\n      };\n    case \"HEAL_PLAYER\":\n      const { healPlayer } = action.payload;\n\n      return {\n        ...state,\n        players: state.players.map((player) => {\n          if (player.id === healPlayer.id) {\n            return {\n              ...player,\n              pv: player.pv + healPlayer.heal,\n            };\n          }\n          return player;\n        }),\n      };\n      case \"FIRE_BALL\":\n        const { fireballDamage, fireballManaCost, fireballPlayerId } = action.payload;\n        \n        return {\n          ...state,\n          players: state.players.map((player) => {\n            if (player.id === fireballPlayerId) {\n              // Vérifiez si le joueur a suffisamment de mana avant de lancer la boule de feu\n              if (player.mana >= fireballManaCost) {\n                return {\n                  ...player,\n                  pv: player.pv - fireballDamage,\n                  monster: {\n                    ...state.monster,\n                    pv: state.monster.pv - fireballDamage,\n                  },\n                  mana: player.mana - fireballManaCost, // Réduire le mana\n\n                };\n              } else {\n                console.log(\"Mana insuffisant pour lancer la boule de feu.\");\n                return player;\n              }\n            }\n\n          }),\n\n         \n        };\n      \n      \n      case \"MANA_PLAYER\":\n        const { manaPlayer } = action.payload;\n      \n        return {\n          ...state,\n          players: state.players.map((player) => {\n            if (player.id === manaPlayer.id) {\n              const updatedMana = Math.min(player.mana + manaPlayer.manaCost, player.manaMax);\n              return {\n                ...player,\n                mana: updatedMana,\n              };\n            }\n            return player;\n          }),\n        };\n      \n\n    default:\n      return state;\n  }\n}\n\nexport default rootReducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}