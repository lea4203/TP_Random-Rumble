{"ast":null,"code":"var _jsxFileName = \"/home/g404/Documents/Random-Rumblee/src/Components/PlayerCard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ButtonCapacity from \"./ButtonCapacity\";\nimport ProgressBar from \"./ProgressBar\";\nimport \"./Game.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlayerCard = ({\n  player,\n  onPlayerHit\n}) => {\n  _s();\n  const [isLarge, setIsLarge] = useState(true);\n  const [isHit, setIsHit] = useState(false);\n  const [isHeal, setIsHeal] = useState(false);\n  useEffect(() => {\n    if (isHit || isHeal) {\n      setTimeout(() => {\n        setIsHit(false);\n        setIsHeal(false);\n      }, 500);\n    }\n  }, [isHit, isHeal]);\n  const handleHit = () => {\n    setIsHit(true);\n    onPlayerHit(player);\n    setTimeout(() => {\n      setIsHit(false);\n    }, 500);\n  };\n  const handleHeal = () => {\n    if (player.pv < player.pvMax) {\n      const healingAmount = 20; // ajustez selon vos besoins\n      player.pv = Math.min(player.pv + healingAmount, player.pvMax);\n\n      // Ajoutez ici la logique de guérison\n      setIsHeal(true);\n\n      // Ajoutez une classe de couleur pour indiquer la guérison\n      const healingColor = \"red\"; // ajustez selon vos besoins\n      document.getElementById(`joueur${player.id}`).style.backgroundColor = healingColor;\n\n      // Vous pouvez également déclencher un effet sonore ou visuel ici\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `col-sm-3 card ${isLarge ? \"player-large\" : \"\"} ${isHit ? \"hit animation\" : \"\"} ${isHeal ? \"heal animation\" : \"\"}`,\n    id: `joueur${player.id}`,\n    onClick: handleHit,\n    onContextMenu: e => {\n      e.preventDefault();\n      handleHeal();\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: `player-image ${isLarge ? \"player-image-large\" : \"\"}`,\n        src: player.image ? require(`../assets/${player.image}`) : \"\",\n        alt: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: player.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        pv: player.pv,\n        pvMax: player.pvMax,\n        faType: \"fa-heart\",\n        barName: \" : pv \",\n        bgType: \"bg-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        pv: player.mana,\n        pvMax: player.manaMax,\n        faType: \"fa-fire-alt\",\n        barName: \" : mana \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: player.abilities.map((ability, index) => /*#__PURE__*/_jsxDEV(ButtonCapacity, {\n          player: player,\n          ability: ability\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PlayerCard, \"JR87+/jbe+3EZfG1Jkez7dfnF9k=\");\n_c = PlayerCard;\nexport default PlayerCard;\nvar _c;\n$RefreshReg$(_c, \"PlayerCard\");","map":{"version":3,"names":["React","useEffect","useState","ButtonCapacity","ProgressBar","jsxDEV","_jsxDEV","PlayerCard","player","onPlayerHit","_s","isLarge","setIsLarge","isHit","setIsHit","isHeal","setIsHeal","setTimeout","handleHit","handleHeal","pv","pvMax","healingAmount","Math","min","healingColor","document","getElementById","id","style","backgroundColor","className","onClick","onContextMenu","e","preventDefault","children","src","image","require","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","faType","barName","bgType","mana","manaMax","abilities","map","ability","index","_c","$RefreshReg$"],"sources":["/home/g404/Documents/Random-Rumblee/src/Components/PlayerCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ButtonCapacity from \"./ButtonCapacity\";\nimport ProgressBar from \"./ProgressBar\";\nimport \"./Game.css\";\n\nconst PlayerCard = ({ player, onPlayerHit }) => {\n  const [isLarge, setIsLarge] = useState(true);\n  const [isHit, setIsHit] = useState(false);\n  const [isHeal, setIsHeal] = useState(false);\n\n  useEffect(() => {\n    if (isHit || isHeal) {\n      setTimeout(() => {\n        setIsHit(false);\n        setIsHeal(false);\n      }, 500);\n    }\n  }, [isHit, isHeal]);\n\n  const handleHit = () => {\n    setIsHit(true);\n    onPlayerHit(player);\n    setTimeout(() => {\n      setIsHit(false);\n    }, 500);\n  };\n\n  const handleHeal = () => {\n    if (player.pv < player.pvMax) {\n      const healingAmount = 20; // ajustez selon vos besoins\n      player.pv = Math.min(player.pv + healingAmount, player.pvMax);\n\n      // Ajoutez ici la logique de guérison\n      setIsHeal(true);\n\n      // Ajoutez une classe de couleur pour indiquer la guérison\n      const healingColor = \"red\"; // ajustez selon vos besoins\n      document.getElementById(`joueur${player.id}`).style.backgroundColor = healingColor;\n\n      // Vous pouvez également déclencher un effet sonore ou visuel ici\n    }\n  };\n\n  return (\n    <div\n      className={`col-sm-3 card ${isLarge ? \"player-large\" : \"\"} ${\n        isHit ? \"hit animation\" : \"\"\n      } ${isHeal ? \"heal animation\" : \"\"}`}\n      id={`joueur${player.id}`}\n      onClick={handleHit}\n      onContextMenu={(e) => {\n        e.preventDefault();\n        handleHeal();\n      }}\n    >\n      <div className='card-body text-center'>\n        <img\n          className={`player-image ${isLarge ? \"player-image-large\" : \"\"}`}\n          src={player.image ? require(`../assets/${player.image}`) : \"\"}\n          alt={player.name}\n        />\n\n        <h5 className='card-title'>{player.name}</h5>\n        <ProgressBar\n          pv={player.pv}\n          pvMax={player.pvMax}\n          faType='fa-heart'\n          barName=' : pv '\n          bgType='bg-danger'\n        />\n        <ProgressBar\n          pv={player.mana}\n          pvMax={player.manaMax}\n          faType='fa-fire-alt'\n          barName=' : mana '\n        />\n        <div className='row'>\n          {player.abilities.map((ability, index) => (\n            <ButtonCapacity key={index} player={player} ability={ability} />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PlayerCard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}